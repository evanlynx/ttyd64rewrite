#new:Header $Header
{
	[MainScript] $Script_Main
	[Background] 00000000
	[EntryList] $EntryList
	[EntryCount] 1
    [MapTattle]  $Function_GetTattle
}

#new:EntryList $EntryList
{
	~Vec4f:Entry0
}

#new:Function_Init $Function_Init
{
	PUSH    RA
	LIA     A0, 800B0CF0
	LIA     A1, "sam_tex"
	JAL     800654F0 % sprintf
	RESERVED
	CLEAR  V0
	JPOP   RA
}

#new:Script_Main $Script_Main
{
	Set   *GB_WorldLocation  .Location:ShiverMountain
	Call  SetCamPerspective  ( .Cam:Default 00000003 00000019 00000010 00001000 )
	Call  SetCamBGColor      ( .Cam:Default 00000000 00000000 00000000 )
	Call  SetCamEnabled      ( .Cam:Default .True )
	Call  SetCamLeadPlayer   ( .Cam:Default .False )
	Set	  *MapVar[2] .True
	Exec  $Script_MakeEntities
	Exec  $Script_SetupMusic
    Exec  $Script_SetupTexturePan
	Exec  $Script_InitStuff
	Exec  $Script_EnterMap
	Return
	End
}

%

#new:Script $Script_InitStuff
{
	Call	ParentColliderToModel ( ~Collider:platform1 ~Model:plat_f1 )
	Call	ParentColliderToModel ( ~Collider:platform2 ~Model:plat_f2 )
	Call	ParentColliderToModel ( ~Collider:platform3 ~Model:plat_f3 )
	Call	ParentColliderToModel ( ~Collider:platform4 ~Model:plat_f4 )
	Call	ParentColliderToModel ( ~Collider:platform5 ~Model:plat_f5 )
	%
	Call	ParentColliderToModel ( ~Collider:pb1 ~Model:plat_b1 )
	Call	ParentColliderToModel ( ~Collider:pb2 ~Model:plat_b2 )
	Call	ParentColliderToModel ( ~Collider:pb3 ~Model:plat_b3 )
	Call	ParentColliderToModel ( ~Collider:pb4 ~Model:plat_b4 )
	Call	ParentColliderToModel ( ~Collider:pb5 ~Model:plat_b5 )
	Call	ParentColliderToModel ( ~Collider:pb6 ~Model:plat_b6 )
	Call	ParentColliderToModel ( ~Collider:pb7 ~Model:plat_b7 )
	Call	ParentColliderToModel ( ~Collider:pb8 ~Model:plat_b8 )
	%
	Call	ParentColliderToModel ( ~Collider:g1 ~Model:g1 )
	Call	ParentColliderToModel ( ~Collider:g2 ~Model:g2 )
	Call	ParentColliderToModel ( ~Collider:g3 ~Model:g3 )
	Call	ParentColliderToModel ( ~Collider:g4 ~Model:g4 )
	Call	ParentColliderToModel ( ~Collider:g5 ~Model:g5 )
	Bind    $Script_MovingPlatform_UpdateMarioXPos_Right  .Trigger:FloorTouch ~Collider:banda 00000001 00000000
	Bind    $Script_MovingPlatform_UpdateMarioXPos_Right  .Trigger:FloorTouch ~Collider:g1 00000001 00000000
	Bind    $Script_MovingPlatform_UpdateMarioXPos_Left  .Trigger:FloorTouch ~Collider:g2 00000001 00000000
	Bind    $Script_MovingPlatform_UpdateMarioXPos_Left  .Trigger:FloorTouch ~Collider:g3 00000001 00000000
	Bind    $Script_MovingPlatform_UpdateMarioXPos_Right  .Trigger:FloorTouch ~Collider:g4 00000001 00000000
	Bind    $Script_MovingPlatform_UpdateMarioXPos_Left  .Trigger:FloorTouch ~Collider:g5 00000001 00000000
	Exec	$Script_MovingPlatforms_Front_Init
	Exec	$Script_MovingPlatforms_Back_Init
	Exec	$Script_MovingPlatforms_Gears_Init
	%
	Exec	$Script_BindScripts_Pipes
	Return
	End
}

#new:Script $Script_MovingPlatform_UpdateMarioXPos_Left
{
	Call	GetPlayerPos ( *Var0 *Var1 *Var2 )
	Sub		*Var0 2
	Call	SetPlayerPos ( *Var0 *Var1 *Var2 )
	Return
	End
}

#new:Script $Script_MovingPlatform_UpdateMarioXPos_Right
{
	Call	GetPlayerPos ( *Var0 *Var1 *Var2 )
	Add		*Var0 2
	Call	SetPlayerPos ( *Var0 *Var1 *Var2 )
	Return
	End
}

#new:Script $Script_MovingPlatforms_Front_Init
{
	Exec	$Script_MovingPlatform_Front_1
	Exec	$Script_MovingPlatform_Front_2
	Exec	$Script_MovingPlatform_Front_3
	Thread
		Wait	90`
		Exec	$Script_MovingPlatform_Front_4
	EndThread
	Exec	$Script_MovingPlatform_Front_5
	Return
	End
}

#new:Script $Script_MovingPlatforms_Back_Init
{
	Thread
		Wait	42`
		Exec	$Script_MovingPlatform_Back_1
	EndThread
	Exec	$Script_MovingPlatform_Back_2
	Exec	$Script_MovingPlatform_Back_3
	Exec	$Script_MovingPlatform_Back_4
	Exec	$Script_MovingPlatform_Back_5
	Thread
		Wait	62`
		Exec	$Script_MovingPlatform_Back_6
	EndThread
	Exec	$Script_MovingPlatform_Back_7
	Exec	$Script_MovingPlatform_Back_8
	Return
	End
}

% most platforms lerp duration is distance/2.29
#new:Script $Script_MovingPlatform_Main
{
	Set	*Var5 *Var0
	Set	*Var6 *Var1
	Set	*Var7 *Var2
	Set	*Var8 *Var3
	Set	*Var9 *Var4
	Set *Var0 .False
	Loop
		Call  MakeLerp ( 0 *Var7 *Var8 .Easing:QuadraticOut )
		Loop
			Set 	*VarA *Var0
			Call  	UpdateLerp
			If *Var9 == .False % platform moves in an horizontal way
				Call	TranslateGroup ( *Var5 *Var0 .False .False )
				% update player pos
				Call    $ReadAddress ( 8015A552 1 *Var2 .False .False ) % get the collider player is standing on rn
				If *Var2 == *Var6
					Call	GetPlayerPos ( *Var2 *Var3 *Var4 )
					Sub		*VarA *Var0
					Sub		*Var2 *VarA
					Call	SetPlayerPos ( *Var2 *Var3 *Var4 )
				EndIf
			Else
				Call	TranslateGroup ( *Var5 .False *Var0 .False )
			EndIf
			Call	UpdateColliderTransform ( *Var6 )
			Wait    1
			If *Var1 == .False
					BreakLoop
			EndIf
		EndLoop
		Wait	25`
		Set		*Var0 *Var7
		Call  	MakeLerp ( *Var7 0 *Var8 .Easing:QuadraticOut )
		Loop
			Set 	*VarA *Var0
			Call  	UpdateLerp
			If *Var9 == .False % platform moves in an horizontal way
				Call	TranslateGroup ( *Var5 *Var0 .False .False )
				% update player pos
				Call    $ReadAddress ( 8015A552 1 *Var2 .False .False ) % get the collider player is standing on rn
				If *Var2 == *Var6
					Call	GetPlayerPos ( *Var2 *Var3 *Var4 )
					% platform moves to the right
					Sub		*VarA *Var0
					Sub		*Var2 *VarA
					Call	SetPlayerPos ( *Var2 *Var3 *Var4 )
				EndIf
			Else
				Call	TranslateGroup ( *Var5 .False *Var0 .False )
			EndIf
			Call	UpdateColliderTransform ( *Var6 )
			Wait    1
			If *Var1 == .False
					BreakLoop
			EndIf
		EndLoop
		Wait	25`
	EndLoop
	Return
	End
}

#new:Script $Script_MovingPlatform_Front_1
{
	Set *Var0 ~Model:platform1
	Set *Var1 ~Collider:platform1
	Set *Var2 147`
	Set *Var3 64`
	Set *Var4 .True
	ExecWait $Script_MovingPlatform_Main
	Return
	End
}

#new:Script $Script_MovingPlatform_Front_2
{
	Set *Var0 ~Model:platform2
	Set *Var1 ~Collider:platform2
	Set *Var2 -126`
	Set *Var3 55`
	Set *Var4 .False
	ExecWait $Script_MovingPlatform_Main
	Return
	End
}

#new:Script $Script_MovingPlatform_Front_3
{
	Set *Var0 ~Model:platform3
	Set *Var1 ~Collider:platform3
	Set *Var2 206`
	Set *Var3 90`
	Set *Var4 .False
	ExecWait $Script_MovingPlatform_Main
	Return
	End
}

#new:Script $Script_MovingPlatform_Front_4
{
	Set *Var0 ~Model:platform4
	Set *Var1 ~Collider:platform4
	Set *Var2 124`
	Set *Var3 90`
	Set *Var4 .True
	ExecWait $Script_MovingPlatform_Main
	Return
	End
}

#new:Script $Script_MovingPlatform_Front_5
{
	Set *Var0 ~Model:platform5
	Set *Var1 ~Collider:platform5
	Set *Var2 -89`
	Set *Var3 90`
	Set *Var4 .False
	ExecWait $Script_MovingPlatform_Main
	Return
	End
}

%

#new:Script $Script_MovingPlatform_Back_1
{
	Set *Var0 ~Model:pb1
	Set *Var1 ~Collider:pb1
	Set *Var2 157`
	Set *Var3 68`
	Set *Var4 .False
	ExecWait $Script_MovingPlatform_Main
	Return
	End
}

#new:Script $Script_MovingPlatform_Back_2
{
	Set *Var0 ~Model:pb2
	Set *Var1 ~Collider:pb2
	Set *Var2 97`
	Set *Var3 42`
	Set *Var4 .False
	ExecWait $Script_MovingPlatform_Main
	Return
	End
}

#new:Script $Script_MovingPlatform_Back_3
{
	Set *Var0 ~Model:pb3
	Set *Var1 ~Collider:pb3
	Set *Var2 100`
	Set *Var3 84`
	Set *Var4 .True
	ExecWait $Script_MovingPlatform_Main
	Return
	End
}

#new:Script $Script_MovingPlatform_Back_4
{
	Set *Var0 ~Model:pb4
	Set *Var1 ~Collider:pb4
	Set *Var2 200`
	Set *Var3 87`
	Set *Var4 .True
	ExecWait $Script_MovingPlatform_Main
	Return
	End
}

#new:Script $Script_MovingPlatform_Back_5
{
	Set *Var0 ~Model:pb5
	Set *Var1 ~Collider:pb5
	Set *Var2 218`
	Set *Var3 95`
	Set *Var4 .True
	ExecWait $Script_MovingPlatform_Main
	Return
	End
}

#new:Script $Script_MovingPlatform_Back_6
{
	Set *Var0 ~Model:pb6
	Set *Var1 ~Collider:pb6
	Set *Var2 143`
	Set *Var3 62`
	Set *Var4 .False
	ExecWait $Script_MovingPlatform_Main
	Return
	End
}

#new:Script $Script_MovingPlatform_Back_7
{
	Set *Var0 ~Model:pb7
	Set *Var1 ~Collider:pb7
	Set *Var2 142`
	Set *Var3 62`
	Set *Var4 .True
	ExecWait $Script_MovingPlatform_Main
	Return
	End
}

#new:Script $Script_MovingPlatform_Back_8
{
	Set *Var0 ~Model:pb8
	Set *Var1 ~Collider:pb8
	Set *Var2 -142`
	Set *Var3 62`
	Set *Var4 .True
	ExecWait $Script_MovingPlatform_Main
	Return
	End
}

%

#new:Script $Script_MovingPlatforms_Gears_Init
{
	Exec	$Script_MovingPlatforms_Gear1
	Exec	$Script_MovingPlatforms_Gear2
	Exec	$Script_MovingPlatforms_Gear3
	Exec	$Script_MovingPlatforms_Gear4
	Exec	$Script_MovingPlatforms_Gear5
	Return
	End
}

#new:Script $Script_MovingPlatforms_Gear1
{
	Loop
		Set *Var0 ~Model:g1
		Set *Var1 ~Collider:g1
		Set *Var2 -1
		ExecWait $Script_UpdateModels_GenericRotation_Z
	EndLoop
	Return
	End
}

#new:Script $Script_MovingPlatforms_Gear2
{
	Loop
		Set *Var0 ~Model:g2
		Set *Var1 ~Collider:g2
		Set *Var2 .True
		ExecWait $Script_UpdateModels_GenericRotation_Z
	EndLoop
	Return
	End
}

#new:Script $Script_MovingPlatforms_Gear3
{
	Loop
		Set *Var0 ~Model:g3
		Set *Var1 ~Collider:g3
		Set *Var2 .True
		ExecWait $Script_UpdateModels_GenericRotation_Z
	EndLoop
	Return
	End
}

#new:Script $Script_MovingPlatforms_Gear4
{
	Loop
		Set *Var0 ~Model:g4
		Set *Var1 ~Collider:g4
		Set *Var2 -1
		ExecWait $Script_UpdateModels_GenericRotation_Z
	EndLoop
	Return
	End
}

#new:Script $Script_MovingPlatforms_Gear5
{
	Loop
		Set *Var0 ~Model:g5
		Set *Var1 ~Collider:g5
		Set *Var2 .True
		ExecWait $Script_UpdateModels_GenericRotation_Z
	EndLoop
	Return
	End
}

#new:Script $Script_UpdateModels_GenericRotation_Z
{
	Set 	*Var5 *Var0
	Set		*Var6 *Var1
	Set		*Var7 *Var2
	Add 	*Var3 3
	Call	RotateModel ( *Var5 *Var3 .False .False *Var7 )
	If *Var6 != .False
		Call	UpdateColliderTransform ( *Var6 )
	EndIf
	Wait	1
	Return
	End
}

%

#new:Script $Script_BindScripts_Pipes
{
	Bind  $Script_pipe1 .Trigger:FloorTouch ~Collider:pipe1 00000001 00000000
	Bind  $Script_pipe4 .Trigger:FloorTouch ~Collider:pipe4 00000001 00000000
	Bind  $Script_pipe5 .Trigger:FloorTouch ~Collider:pipe5 00000001 00000000
	Bind  $Script_pipe7 .Trigger:FloorTouch ~Collider:pipe7 00000001 00000000
	%
	Bind  $Script_pipeB1 .Trigger:FloorTouch ~Collider:pipeB1 00000001 00000000
	Bind  $Script_pipeB2 .Trigger:FloorTouch ~Collider:pipeB2 00000001 00000000
	Bind  $Script_pipeB3 .Trigger:FloorTouch ~Collider:pipeB3 00000001 00000000
	Bind  $Script_pipeB4 .Trigger:FloorTouch ~Collider:pipeB4 00000001 00000000
	Bind  $Script_pipeB5 .Trigger:FloorTouch ~Collider:pipeB5 00000001 00000000
	Return
	End
}

#new:Script $Script_pipe1
{
	SetGroup 0000001B
	Set   *VarB ~Collider:pipe1 % entry collider
	Set   *VarC ~Collider:pipeB1 % exit collider
	Set	  *VarD .True
	Exec  $Script_ExitVerticalPipe_NoGoToMap
	Return
	End
}

#new:Script $Script_pipe4
{
	SetGroup 0000001B
	Set   *VarB ~Collider:pipe4 % entry collider
	Set   *VarC ~Collider:pipeB3 % exit collider
	Set	  *VarD .True
	Exec  $Script_ExitVerticalPipe_NoGoToMap
	Return
	End
}

#new:Script $Script_pipe5
{
	SetGroup 0000001B
	Set   *VarB ~Collider:pipe5 % entry collider
	Set   *VarC ~Collider:pipe3 % exit collider
	Set	  *VarD .False
	Exec  $Script_ExitVerticalPipe_NoGoToMap
	Return
	End
}

#new:Script $Script_pipe7
{
	SetGroup 0000001B
	Set   *VarB ~Collider:pipe7 % entry collider
	Set   *VarC ~Collider:pipeB5 % exit collider
	Set	  *VarD .True
	Exec  $Script_ExitVerticalPipe_NoGoToMap
	Return
	End
}

#new:Script $Script_pipeB1
{
	SetGroup 0000001B
	Set   *VarB ~Collider:pipeB1 % entry collider
	Set   *VarC ~Collider:pipe1 % exit collider
	Set   *VarD .False
	Exec  $Script_ExitVerticalPipe_NoGoToMap
	Return
	End
}

#new:Script $Script_pipeB2
{
	SetGroup 0000001B
	Set   *VarB ~Collider:pipeB2 % entry collider
	Set   *VarC ~Collider:pipe2 % exit collider
	Set   *VarD .False
	Exec  $Script_ExitVerticalPipe_NoGoToMap
	Return
	End
}

#new:Script $Script_pipeB3
{
	SetGroup 0000001B
	Set   *VarB ~Collider:pipeB3 % entry collider
	Set   *VarC ~Collider:pipe4 % exit collider
	Set   *VarD .False
	Exec  $Script_ExitVerticalPipe_NoGoToMap
	Return
	End
}

#new:Script $Script_pipeB4
{
	SetGroup 0000001B
	Set   *VarB ~Collider:pipeB4 % entry collider
	Set   *VarC ~Collider:pipe6 % exit collider
	Set   *VarD .False
	Exec  $Script_ExitVerticalPipe_NoGoToMap
	Return
	End
}

#new:Script $Script_pipeB5
{
	SetGroup 0000001B
	Set   *VarB ~Collider:pipeB5 % entry collider
	Set   *VarC ~Collider:pipe7 % exit collider
	Set   *VarD .False
	Exec  $Script_ExitVerticalPipe_NoGoToMap
	Return
	End
}

/%
	ARGS:
	*Var[A]  entryID
	*Var[B]  colliderID
	*Var[C]  $Script_GotoMap
%/
#new:Script $Script_ExitVerticalPipe_NoGoToMap
{
	If *MapVar[2] == .False
		Return
	EndIf
	Call  $Function_Pipe_CheckDownInput ( )
	If  *Var[0]  ==  00000000
		Return
	EndIf
	Call  GetCurrentPartner ( *Var[0] )
	If  *Var[0]  !=  00000000
		Call  GetCurrentPartnerID   ( *Var[1] )
		If  *Var[1]  !=  .Partner:Watt % 6
			Return
		Else
			Call  802D2B6C ( )
			Call  DisablePlayerInput    ( .True )
		EndIf
	Else
		Call  DisablePlayerInput    ( .True )
	EndIf
/%
	ExecWait  $Script_80241230
	Return
	End
}

#new:Script $Script_80241230
{
%/
	Set *MapVar[2] .False % disable pipes
	SetGroup  0000001B
	Call  $Function_Pipe_SetAnimFlag ( )
	Call  DisablePlayerPhysics  ( .True )
	Call  HidePlayerShadow  ( .True )
	Call  GetColliderCenter ( *VarB )
	Call  PlayerMoveTo      ( *Var0 *Var2 00000003 )
	Call  GetColliderCenter ( *VarB )
	Call  SetPlayerPos      ( *Var0 *Var1 *Var2 )
	Call  SetPlayerFlagBits ( 00200000 .True )
	Call  $Function_Pipe_GetCameraYaw ( )
	Call  InterpPlayerYaw   ( *Var[0] 00000000 )
	Wait  2`
	Call  SetPlayerFlagBits ( 00200000 .False )
	Call  PlaySound ( 00000163 )
	Call  GetPlayerPos      ( *Var0 *Var1 *Var2 )
	Thread
		Wait  4`
		Loop  40`
			Sub   *Var1  00000001
			Call  SetPlayerPos  ( *Var0 *Var1 *Var2 )
			Wait  1`
		EndLoop
	EndThread
	Call  802D286C  ( 00000800 )
	Call  802D2520  ( 00010002 00000005 00000002 00000001 00000001 00000000 )
	Wait  25`
	ExecWait  $Script_EnterVerticalPipe_NoFromGoToMap
	Return
	End
}

#new:Script $Script_EnterVerticalPipe_NoFromGoToMap
{
	Call  DisablePartnerAI      ( 00000000 )
	Call  SetPlayerAnimation    ( .PlayerAnim:StandStill )
	Call  GetCurrentPartnerID   ( *Var[0] )
	If  *Var[0]  !=  .Partner:None % 0
		Call  EnableNpcShadow   ( .Npc:Partner .False )
		Call  SetNpcPos ( .Npc:Partner 00000000 -1000` 00000000 )
	EndIf
	Call  GetColliderCenter ( *VarC )
	Sub   *Var1  40`
	Call  SetPlayerPos  ( *Var0 *Var1 *Var2 )
	Call  InterpPlayerYaw   ( -270` 00000000 )
	Call  PlaySound     ( 00000163 )
	Call  802D286C      ( 00000100 )
	Call  802D2520      ( 00010000 00000005 00000002 00000001 00000001 00000000 )
	Call  GetPlayerPos  ( *Var0 *Var1 *Var2 )
	Loop  40`
		Add   *Var1  00000001
		Call  SetPlayerPos  ( *Var0 *Var1 *Var2 )
		Wait  1`
	EndLoop
	Wait  3`
	Call  GetCurrentPartnerID   ( *Var0 )
	If  *Var0  !=  .Partner:None % 0
		Thread
			Call  DisablePartnerAI  ( 00000000 )
			Call  GetPlayerPos      ( *Var0 *Var1 *Var2 )
			Sub   *Var2  00000003
			Call  SetNpcPos ( .Npc:Partner *Var0 *Var1 *Var2 )
			Call  SetNpcFlagBits    ( .Npc:Partner 00000002 .False )
			Call  EnablePartnerAI ( )
			Call  EnableNpcShadow   ( .Npc:Partner .True )
		EndThread
	EndIf
	Wait  2`
	Call  802D2520  ( 00010000 00000000 00000000 00000000 00000000 00000000 )
	Wait  1`
	Call  $WriteAddress ( $Byte_DisableVerticalMovement 0 *VarD .False .False ) % disable vertical movement % needed by `World_8bitMario_DisableZMovement.patch`
	Call  SetPlayerAnimation    ( 00010002 )
	Call  DisablePlayerPhysics  ( .False )
	Call  DisablePlayerInput    ( .False )
	Call  HidePlayerShadow      ( .False )
	Label  0
	Call  $Function_Pipe_GetCurrentFloor ( )
	Wait  1`
	If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
		Goto  0
	EndIf
	Set 	*MapVar[2] .True % enable pipes once again
	Return
	End
}

%

#new:Script $Script_ScriptedSpring_FollowCam
{
	Loop
		Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
		Call  SetCamTarget  ( .Cam:Default *Var[0] *Var[1] *Var[2] )
		Wait  1`
	EndLoop
	Return
	End
}
#new:Script $Script_ScriptedSpring_Entity_Spring
{
	Call  DisablePlayerInput    ( .True )
	Call  DisablePlayerPhysics  ( .True )
	Call  SetPlayerActionState  ( .ActionState:Launch )
	Wait  1`
	Exec  $Script_ScriptedSpring_FollowCam *Var[A]
	Call  SetPlayerJumpscale    ( *Fixed[0.7] )
	Call  PlayerJump            ( ~Vec3d:JumpPos_Spring 30` )
	Kill  *Var[A]
	Call  SetPlayerActionState  ( .ActionState:Idle )
	Call  DisablePlayerPhysics  ( .False )
	Call  DisablePlayerInput    ( .False )
	Return
	End
}

#new:Function $Function_Pipe_SetAnimFlag
{
	LAW       V0, 800F7B30
	LW        V1, 4 (V0)
	LUI       A0, 10
	OR        V1, V1, A0
	SW        V1, 4 (V0)
	JR        RA
	ADDIU     V0, R0, 2
}

#new:Function $Function_Pipe_GetCurrentFloor
{
	LAH       V0, 8015A552
	SW        V0, 84 (A0)
	JR        RA
	ADDIU     V0, R0, 2
}

#new:Function $Function_Pipe_CheckDownInput
{
	LAH       V1, 8015A552
	ADDIU     SP, SP, FFE8
	SW        S0, 10 (SP)
	COPY      S0, A0
	SW        RA, 14 (SP)
	LW        V0, B0 (S0)
	BEQ       V1, V0, .o2C
	ADDIU     V0, R0, 2
	BEQ       R0, R0, .oAC
	SW        R0, 84 (S0)
	.o2C
	LAW       V1, 8007419C
	LB        V0, 40 (V1)
	LB        A3, 44 (V1)
	BLTZL     V0, .o44
	SUBU      V0, R0, V0
	.o44
	BNE       V0, R0, .o54
	NOP
	BEQL      A3, R0, .oAC
	CLEAR     V0
	.o54
	MTC1      V0, F4
	NOP
	CVT.S.W   F4, F4
	MFC1      A2, F4
	MTC1      A3, F4
	NOP
	CVT.S.W   F4, F4
	MTC1      R0, F12
	MFC1      A3, F4
	JAL       ~Func:atan2
	MOV.S     F14, F12
	LIF       F2, 60.0
	NOP
	C.LT.S    F0, F2
	NOP
	BC1F      .oA8
	ADDIU     V0, R0, 1
	SW        V0, 84 (S0)
	BEQ       R0, R0, .oAC
	ADDIU     V0, R0, 2
	.oA8
	CLEAR     V0
	.oAC
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_Pipe_GetEntryCoords
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 1C (SP)
	SW        S2, 18 (SP)
	JAL       ~Func:get_current_map_header
	SW        S0, 10 (SP)
	COPY      A0, S1
	LIO       A1, *Var[0]
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LUI       A1, FE36
	LW        V1, 14 (S2)
	SLL       S0, V0, 4
	ADDU      V1, S0, V1
	LWC1      F0, 0 (V1)
	TRUNC.W.S F2, F0
	MFC1      A2, F2
	JAL       ~Func:set_variable
	ORI       A1, A1, 3C81 % Var[1]
	COPY      A0, S1
	LW        V0, 14 (S2)
	LUI       A1, FE36
	ADDU      V0, S0, V0
	LWC1      F0, 4 (V0)
	TRUNC.W.S F2, F0
	MFC1      A2, F2
	JAL       ~Func:set_variable
	ORI       A1, A1, 3C82 % Var[2]
	COPY      A0, S1
	LW        V0, 14 (S2)
	LUI       A1, FE36
	ADDU      V0, S0, V0
	LWC1      F0, 8 (V0)
	TRUNC.W.S F2, F0
	MFC1      A2, F2
	JAL       ~Func:set_variable
	ORI       A1, A1, 3C83 % Var[3]
	COPY      A0, S1
	LW        V0, 14 (S2)
	LUI       A1, FE36
	ADDU      S0, S0, V0
	LWC1      F0, C (S0)
	TRUNC.W.S F2, F0
	MFC1      A2, F2
	JAL       ~Func:set_variable
	ORI       A1, A1, 3C84 % Var[4]
	LW        RA, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_Pipe_GetCameraYaw
{
	LAW       V1, 80077410
	LIF       F12, 180.0
	ADDIU     SP, SP, FFE8
	SW        RA, 14 (SP)
	SW        S0, 10 (SP)
	SLL       V0, V1, 2
	ADDU      V0, V0, V1
	SLL       V0, V0, 2
	SUBU      V0, V0, V1
	SLL       V1, V0, 3
	ADDU      V0, V0, V1
	SLL       V0, V0, 3
	LTF       F0, V0 (800B1DEC)
	ADD.S     F12, F0, F12
	JAL       ~Func:clamp_angle
	COPY      S0, A0
	TRUNC.W.S F2, F0
	SWC1      F2, 84 (S0)
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_Pipe_GetPointInFrontOfPlayer
{
	ADDIU     SP, SP, FFD8
	SW        S0, 18 (SP)
	COPY      S0, A0
	SW        RA, 1C (SP)
	SDC1      F20, 20 (SP)
	LW        V0, C (S0)
	JAL       ~Func:get_float_variable
	LW        A1, 0 (V0)
	ADDIU     A0, SP, 10
	LIA       V0, 8010EFC8
	MFC1      A2, F0
	LWC1      F0, 28 (V0) % player X
	LWC1      F2, 30 (V0) % player Z
	SWC1      F0, 10 (SP) % arg0 for add_vec2D_polar
	SWC1      F2, 14 (SP) % arg1 for add_vec2D_polar
	LW        A3, 80 (V0)
	LWC1      F20, 2C (V0)
	JAL       ~Func:add_vec2D_polar
	ADDIU     A1, SP, 14
	COPY      A0, S0
	LUI       A1, FE36
	LW        A2, 10 (SP)
	JAL       ~Func:set_float_variable
	ORI       A1, A1, 3C80 % Var[0]
	COPY      A0, S0
	LUI       A1, FE36
	MFC1      A2, F20
	JAL       ~Func:set_float_variable
	ORI       A1, A1, 3C81 % Var[1]
	COPY      A0, S0
	LUI       A1, FE36
	LW        A2, 14 (SP)
	JAL       ~Func:set_float_variable
	ORI       A1, A1, 3C82 % Var[2]
	LW        RA, 1C (SP)
	LW        S0, 18 (SP)
	LDC1      F20, 20 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Script $Script_EnterVerticalPipe
{
	Call  DisablePlayerInput    ( .True )
	Call  DisablePlayerPhysics  ( .True )
	Call  DisablePartnerAI      ( 00000000 )
	Call  HidePlayerShadow      ( .True )
	Call  SetPlayerAnimation    ( .PlayerAnim:StandStill )
	Call  GetCurrentPartnerID   ( *Var[0] )
	If  *Var[0]  !=  .Partner:None % 0
		Call  EnableNpcShadow   ( .Npc:Partner .False )
		Call  SetNpcPos ( .Npc:Partner 00000000 -1000` 00000000 )
	EndIf
	Call  GetEntryID    ( *Var[0] )
	Call  $Function_Pipe_GetEntryCoords ( )
	Sub   *Var[2]  40`
	Call  SetPlayerPos  ( *Var[1] *Var[2] *Var[3] )
	Call  InterpPlayerYaw   ( *Var[4] 00000000 )
	Call  PlaySound     ( 00000163 )
	Call  802D286C      ( 00000100 )
	Call  802D2520      ( 00010000 00000005 00000002 00000001 00000001 00000000 )
	Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
	Loop  40`
		Add   *Var[1]  00000001
		Call  SetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
		Wait  1`
	EndLoop
	Wait  3`
	Call  GetCurrentPartnerID   ( *Var[0] )
	If  *Var[0]  !=  .Partner:None % 0
		Thread
			Call  DisablePartnerAI  ( 00000000 )
			Call  GetPlayerPos      ( *Var[0] *Var[1] *Var[2] )
			Sub   *Var[2]  00000003
			Call  SetNpcPos ( .Npc:Partner *Var[0] *Var[1] *Var[2] )
			Call  SetNpcFlagBits    ( .Npc:Partner 00000002 .False )
			Call  EnablePartnerAI ( )
			Call  EnableNpcShadow   ( .Npc:Partner .True )
		EndThread
	EndIf
	Wait  2`
	Call  802D2520  ( 00010000 00000000 00000000 00000000 00000000 00000000 )
	Wait  1`
	Call  SetPlayerAnimation    ( 00010002 )
	Call  DisablePlayerPhysics  ( .False )
	Call  DisablePlayerInput    ( .False )
	Call  HidePlayerShadow      ( .False )
	Label  0
	Call  $Function_Pipe_GetCurrentFloor ( )
	Wait  1`
	If  *Var[0]  !=  FFFFFFFF % FFFFFFFF
		Goto  0
	EndIf
	Exec  *Var[A]
	Return
	End
}

#new:Script $Script_EnterHorizontalPipe
{
	Call  DisablePlayerInput    ( .True )
	Call  DisablePlayerPhysics  ( .True )
	Call  HidePlayerShadow      ( .True )
	Call  ModifyColliderFlags   ( 00000000 *Var[B] 7FFFFE00 )
	Call  GetEntryID    ( *Var[0] )
	Call  $Function_Pipe_GetEntryCoords ( )
	Set   *Var[5]  *Var[1]
	Set   *Var[6]  *Var[2]
	Set   *Var[7]  *Var[3]
	Add   *Var[2]  2`
	Call  SetPlayerPos  ( *Var[1] *Var[2] *Var[3] )
	Call  InterpPlayerYaw       ( *Var[4] 00000000 )
	If  *Var[4]  ==  90`
		Add   *Var[5]  40`
	Else
		Sub   *Var[5]  40`
	EndIf
	Call  UseSettingsFrom   ( .Cam:Default *Var[5] *Var[6] *Var[7] )
	Call  SetPanTarget      ( .Cam:Default *Var[5] *Var[6] *Var[7] )
	Call  SetCamSpeed       ( .Cam:Default *Fixed[90.0] )
	Call  PanToTarget       ( .Cam:Default 00000000 00000001 )
	Call  GetCurrentPartnerID   ( *Var[0] )
	If  *Var[0]  !=  .Partner:None % 0
		Call  DisablePartnerAI  ( 00000000 )
		Call  EnableNpcShadow   ( .Npc:Partner .False )
		Call  SetNpcPos ( .Npc:Partner 00000000 -1000` 00000000 )
		Call  InterpNpcYaw      ( .Npc:Partner *Var[0] 00000000 )
	EndIf
	Wait  1`
	Call  PlaySound ( 00000163 )
	Thread
		Wait  25`
		Call  HidePlayerShadow  ( .False )
	EndThread
	Call  802D286C  ( 00000900 )
	Call  802D2520  ( 00010002 00000005 00000003 00000001 00000001 00000000 )
	Loop  40`
		Call  $Function_Pipe_GetPointInFrontOfPlayer ( *Fixed[1.0] )
		Call  SetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
		Wait  1`
	EndLoop
	Call  GetCurrentPartnerID   ( *Var[0] )
	If  *Var[0]  !=  .Partner:None % 0
		Thread
			Call  GetPlayerPos      ( *Var[0] *Var[1] *Var[2] )
			Sub   *Var[2]  00000003
			Call  SetNpcPos ( .Npc:Partner *Var[0] *Var[1] *Var[2] )
			Call  EnableNpcShadow   ( .Npc:Partner .True )
			Call  EnablePartnerAI ( )
		EndThread
	EndIf
	Wait  5`
	Call  802D2520  ( 00010002 00000000 00000000 00000000 00000000 00000000 )
	Call  ModifyColliderFlags   ( 00000001 *Var[B] 7FFFFE00 )
	Call  DisablePlayerInput    ( .False )
	Call  DisablePlayerPhysics  ( .False )
	Call  PanToTarget   ( .Cam:Default 00000000 00000000 )
	Exec  *Var[A]
	Return
	End
}

/%
	ARGS:
	*Var[A]  entryID
	*Var[B]  colliderID
	*Var[C]  $Script_GotoMap
%/
#new:Script $Script_ExitVerticalPipe
{
	Call  $Function_Pipe_CheckDownInput ( )
	If  *Var[0]  ==  00000000
		Return
	EndIf
	Call  GetCurrentPartner ( *Var[0] )
	If  *Var[0]  !=  00000000
		Call  GetCurrentPartnerID   ( *Var[1] )
		If  *Var[1]  !=  .Partner:Watt % 6
			Return
		Else
			Call  802D2B6C ( )
			Call  DisablePlayerInput    ( .True )
		EndIf
	Else
		Call  DisablePlayerInput    ( .True )
	EndIf
/%
	ExecWait  $Script_80241230
	Return
	End
}

#new:Script $Script_80241230
{
%/
	SetGroup  0000001B
	Call  $Function_Pipe_SetAnimFlag ( )
	Call  DisablePlayerPhysics  ( .True )
	Call  HidePlayerShadow  ( .True )
	Set   *Var[0]  *Var[A]
	Call  $Function_Pipe_GetEntryCoords ( )
	Call  PlayerMoveTo      ( *Var[1] *Var[3] 00000003 )
	Set   *Var[0]  *Var[A]
	Call  $Function_Pipe_GetEntryCoords ( )
	Call  SetPlayerPos      ( *Var[1] *Var[2] *Var[3] )
	Call  SetPlayerFlagBits ( 00200000 .True )
	Call  $Function_Pipe_GetCameraYaw ( )
	Call  InterpPlayerYaw   ( *Var[0] 00000000 )
	Wait  2`
	Call  SetPlayerFlagBits ( 00200000 .False )
	Call  PlaySound ( 00000163 )
	Call  GetPlayerPos      ( *Var[0] *Var[1] *Var[2] )
	Thread
		Wait  4`
		Loop  40`
			Sub   *Var[1]  00000001
			Call  SetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
			Wait  1`
		EndLoop
	EndThread
	Call  802D286C  ( 00000800 )
	Call  802D2520  ( 00010002 00000005 00000002 00000001 00000001 00000000 )
	Wait  25`
	ExecWait  *Var[C]
	Return
	End
}

/%
	ARGS:
	*Var[A]  entryID
	*Var[B]  colliderID
	*Var[C]  $Script_GotoMap
%/
#new:Script $Script_ExitHorizontalPipe
{
	Call  802D249C  ( *Var[0] )
	If  *Var[0]  ==  00000000
		Return
	EndIf
	Call  GetPlayerActionState  ( *Var[0] )
	If  *Var[0]  ==  .ActionState:Spin % 1A
		Return
	EndIf
	Call  GetCurrentPartner ( *Var[0] )
	If  *Var[0]  !=  .ActionState:Idle % 0
		Call  GetCurrentPartnerID   ( *Var[1] )
		If  *Var[1]  !=  .Partner:Watt % 6
			Return
		Else
			Call  802D2B6C ( )
			Call  DisablePlayerInput    ( .True )
		EndIf
	Else
		Call  DisablePlayerInput    ( .True )
	EndIf
	SetGroup  0000001B
	Call  $Function_Pipe_SetAnimFlag ( )
	Call  DisablePlayerPhysics  ( .True )
	Call  ModifyColliderFlags   ( 00000000 *Var[B] 7FFFFE00 )
	Set   *Var[0]  *Var[A]
	Call  $Function_Pipe_GetEntryCoords ( )
	Set   *Var[5]  *Var[1]
	Set   *Var[6]  *Var[2]
	Add   *Var[6]  2`
	Set   *Var[7]  *Var[3]
	Set   *Var[8]  *Var[4]
	Add   *Var[8]  180`
	If  *Var[4]  >=  360`
		Sub   *Var[4]  360`
	EndIf
	Call  InterpPlayerYaw       ( *Var[8] 00000001 )
	Wait  1`
	Call  PlaySound     ( 00000163 )
	Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
	Call  SetPlayerPos  ( *Var[0] *Var[6] *Var[7] )
	Call  SetPlayerAnimation    ( .PlayerAnim:StandStill )
	Call  802D286C      ( 00000800 )
	Call  802D2520      ( 00010000 00000005 00000003 00000001 00000001 00000000 )
	Thread
		Wait  8`
		Call  HidePlayerShadow  ( .True )
	EndThread
	Thread
		Wait  3`
		Loop  40`
			Call  $Function_Pipe_GetPointInFrontOfPlayer ( *Fixed[1.0] )
			Call  SetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
			Wait  1`
		EndLoop
	EndThread
	Wait  25`
	ExecWait  *Var[C]
	Return
	End
}

#new:Script $Script_MakeEntities
{
	Call  MakeEntity    ( .Entity:ScriptSpring ~Vec4d:Entity_Spring 80000000 )
	Call  AssignScript    ( $Script_ScriptedSpring_Entity_Spring )
	%
	Call  MakeEntity  	    ( .Entity:SuperBlock ~Vec4d:Entity_Shine1 80000000 )
    Set   *MapVar[0] *Var0
    Call  AssignBlockFlag   ( *GF_TYD07_Shine1 )
    Call  AssignScript 	    ( $Script_Entity_Shine1 )
	%
	Call  MakeEntity  	    ( .Entity:SuperBlock ~Vec4d:Entity_Shine2 80000000 )
    Set   *MapVar[1] *Var0
    Call  AssignBlockFlag   ( *GF_TYD07_Shine2 )
    Call  AssignScript 	    ( $Script_Entity_Shine2 )
	%
	Call  MakeItemEntity ( .Item:FeelingFineP ~Vec3d:ItemPos .ItemSpawnMode:Fixed_NeverVanish *GF_TYD07_Item )
	Call  MakeItemEntity ( .Item:StarPiece ~Vec3d:ItemPos2 .ItemSpawnMode:Fixed_NeverVanish *GF_TYD07_StarPiece )
	Return
	End
}

#new:Script $Script_Entity_Shine1
{
    Set *Var0 *MapVar[0] % entityID
    SetConst *Var1 *GF_TYD07_Shine1 % flag
    ExecWait $Script_ShineBlock
    Return
    End
}

#new:Script $Script_Entity_Shine2
{
    Set *Var0 *MapVar[1] % entityID
    SetConst *Var1 *GF_TYD07_Shine2 % flag
    ExecWait $Script_ShineBlock
    Return
    End
}

#new:Script $Script_SetupMusic
{
	Call  SetMusicTrack ( 00000000 000000AC 00000000 00000008 )
	Call  ClearAmbientSounds ( 250` )
	Return
	End
}

#new:Script $Script_EnterMap
{
	Call  GetEntryID    ( *Var[0] )
	Switch  *Var[0]
		Case  ==  ~Entry:Entry0
			Set   *Var[A] $Script_CreateExitTriggers
			Exec  $Script_EnterVerticalPipe
		Default
			Exec  $Script_CreateExitTriggers
	EndSwitch
	Return
	End
}

#new:Script $Script_Exit0
{
	SetGroup 0000001B
	Set   *Var[A] ~Entry:Entry0
	Set   *Var[B] ~Collider:Exit0
	Set   *Var[C] $Script_GotoMap_Exit0
	ExecWait  $Script_ExitVerticalPipe
	Return
	End
}

#new:Script $Script_GotoMap_Exit0
{
	Call  GotoMap   ( "sam_13" 00000001 )
	Wait  100`
	Return
	End
}

#new:Script $Script_CreateExitTriggers
{
	Bind  $Script_Exit0 .Trigger:FloorTouch ~Collider:Exit0 00000001 00000000
	Return
	End
}

% Panners

#new:Script $Script_SetupTexturePan
{
	Call     802C9000 	( ~Model:band 0 )
	Thread
		Set  *Var[0] 0
		Set  *Var[1] 0
		Set  *Var[2] FFFFFEBD
		Set  *Var[3] 0
		Set  *Var[4] 0
		Set  *Var[5] 0
		Set  *Var[6] 0
		Set  *Var[7] 0
		Set  *Var[8] 0
		Set  *Var[9] 0
		Set  *Var[A] 0
		Set  *Var[B] 0
		Set  *Var[C] 0
		Exec $Script_TexturePan_Update
	EndThread
	Return
	End
}

#new:Script $Script_TexturePan_Update
{
    SetGroup  00000000
    If  *Var[5]  ==  00000001
        If  *Var[6]  ==  00000001
            If  *Var[7]  ==  00000001
                If  *Var[8]  ==  00000001
                    Call  $Function_TexturePan_Simple ( )
                    Return
                EndIf
            EndIf
        EndIf
    EndIf
    Call  $Function_TexturePan_Complex ( )
    Return
    End
}

#new:Function $Function_TexturePan_Simple
{
    ADDIU       SP, SP, FFE8
    SW          S0, 10 (SP)
    COPY        S0, A0
    SW          RA, 14 (SP)
    LW          V1, A8 (S0)
    LW          V0, 88 (S0)
    ADDU        V1, V1, V0
    BGEZ        V1, .o30
    SW          V1, A8 (S0)
    LUI         V0, 2
    BEQ         R0, R0, .o40
    ADDU        V0, V1, V0
    .o30
    LUI         A0, 2
    SLT         V0, A0, V1
    BEQ         V0, R0, .o44
    SUBU        V0, V1, A0
    .o40
    SW          V0, A8 (S0)
    .o44
    LW          V1, AC (S0)
    LW          V0, 8C (S0)
    ADDU        V1, V1, V0
    BGEZ        V1, .o64
    SW          V1, AC (S0)
    LUI         V0, 2
    BEQ         R0, R0, .o74
    ADDU        V0, V1, V0
    .o64
    LUI         A0, 2
    SLT         V0, A0, V1
    BEQ         V0, R0, .o78
    SUBU        V0, V1, A0
    .o74
    SW          V0, AC (S0)
    .o78
    LW          V1, B0 (S0)
    LW          V0, 90 (S0)
    ADDU        V1, V1, V0
    BGEZ        V1, .o98
    SW          V1, B0 (S0)
    LUI         V0, 2
    BEQ         R0, R0, .oA8
    ADDU        V0, V1, V0
    .o98
    LUI         A0, 2
    SLT         V0, A0, V1
    BEQ         V0, R0, .oAC
    SUBU        V0, V1, A0
    .oA8
    SW          V0, B0 (S0)
    .oAC
    LW          V1, B4 (S0)
    LW          V0, 94 (S0)
    ADDU        V1, V1, V0
    BGEZ        V1, .oCC
    SW          V1, B4 (S0)
    LUI         V0, 2
    BEQ         R0, R0, .oDC
    ADDU        V0, V1, V0
    .oCC
    LUI         A0, 2
    SLT         V0, A0, V1
    BEQ         V0, R0, .oE0
    SUBU        V0, V1, A0
    .oDC
    SW          V0, B4 (S0)
    .oE0
    LW          A0, 84 (S0)
    JAL         8011BC1C
    LW          A1, A8 (S0)
    LW          A0, 84 (S0)
    JAL         8011BC34
    LW          A1, AC (S0)
    LW          A0, 84 (S0)
    JAL         8011BC4C
    LW          A1, B0 (S0)
    LW          A0, 84 (S0)
    JAL         8011BC64
    LW          A1, B4 (S0)
    LW          RA, 14 (SP)
    LW          S0, 10 (SP)
    CLEAR       V0
    JR          RA
    ADDIU       SP, SP, 18
}

#new:Function $Function_TexturePan_Complex
{
    ADDIU       SP, SP, FFE8
    SW          S0, 10 (SP)
    COPY        S0, A0
    BEQ         A1, R0, .o24
    SW          RA, 14 (SP)
    SW          R0, 70 (S0)
    SW          R0, 74 (S0)
    SW          R0, 78 (S0)
    SW          R0, 7C (S0)
    .o24
    LW          V0, 70 (S0)
    BNE         V0, R0, .o64
    NOP
    LW          V1, A8 (S0)
    LW          V0, 88 (S0)
    ADDU        V1, V1, V0
    BGEZ        V1, .o50
    SW          V1, A8 (S0)
    LUI         V0, 2
    BEQ         R0, R0, .o60
    ADDU        V0, V1, V0
    .o50
    LUI         A0, 2
    SLT         V0, A0, V1
    BEQ         V0, R0, .o64
    SUBU        V0, V1, A0
    .o60
    SW          V0, A8 (S0)
    .o64
    LW          V0, 74 (S0)
    BNE         V0, R0, .oA4
    NOP
    LW          V1, AC (S0)
    LW          V0, 8C (S0)
    ADDU        V1, V1, V0
    BGEZ        V1, .o90
    SW          V1, AC (S0)
    LUI         V0, 2
    BEQ         R0, R0, .oA0
    ADDU        V0, V1, V0
    .o90
    LUI         A0, 2
    SLT         V0, A0, V1
    BEQ         V0, R0, .oA4
    SUBU        V0, V1, A0
    .oA0
    SW          V0, AC (S0)
    .oA4
    LW          V0, 78 (S0)
    BNE         V0, R0, .oE4
    NOP
    LW          V1, B0 (S0)
    LW          V0, 90 (S0)
    ADDU        V1, V1, V0
    BGEZ        V1, .oD0
    SW          V1, B0 (S0)
    LUI         V0, 2
    BEQ         R0, R0, .oE0
    ADDU        V0, V1, V0
    .oD0
    LUI         A0, 2
    SLT         V0, A0, V1
    BEQ         V0, R0, .oE4
    SUBU        V0, V1, A0
    .oE0
    SW          V0, B0 (S0)
    .oE4
    LW          V0, 7C (S0)
    BNE         V0, R0, .o124
    NOP
    LW          V1, B4 (S0)
    LW          V0, 94 (S0)
    ADDU        V1, V1, V0
    BGEZ        V1, .o110
    SW          V1, B4 (S0)
    LUI         V0, 2
    BEQ         R0, R0, .o120
    ADDU        V0, V1, V0
    .o110
    LUI         A0, 2
    SLT         V0, A0, V1
    BEQ         V0, R0, .o124
    SUBU        V0, V1, A0
    .o120
    SW          V0, B4 (S0)
    .o124
    LW          A0, 84 (S0)
    JAL         8011BC1C
    LW          A1, A8 (S0)
    LW          A0, 84 (S0)
    JAL         8011BC34
    LW          A1, AC (S0)
    LW          A0, 84 (S0)
    JAL         8011BC4C
    LW          A1, B0 (S0)
    LW          A0, 84 (S0)
    JAL         8011BC64
    LW          A1, B4 (S0)
    LW          V0, 70 (S0)
    LW          V1, 78 (S0)
    LW          A0, 98 (S0)
    ADDIU       V0, V0, 1
    SW          V0, 70 (S0)
    LW          V0, 74 (S0)
    ADDIU       V1, V1, 1
    SW          V1, 78 (S0)
    LW          V1, 70 (S0)
    ADDIU       V0, V0, 1
    SW          V0, 74 (S0)
    LW          V0, 7C (S0)
    SLT         V1, V1, A0
    ADDIU       V0, V0, 1
    BNE         V1, R0, .o198
    SW          V0, 7C (S0)
    SW          R0, 70 (S0)
    .o198
    LW          V0, 74 (S0)
    LW          V1, 9C (S0)
    SLT         V0, V0, V1
    BEQL        V0, R0, .o1AC
    SW          R0, 74 (S0)
    .o1AC
    LW          V0, 78 (S0)
    LW          V1, A0 (S0)
    SLT         V0, V0, V1
    BEQL        V0, R0, .o1C0
    SW          R0, 78 (S0)
    .o1C0
    LW          V0, 7C (S0)
    LW          V1, A4 (S0)
    SLT         V0, V0, V1
    BEQL        V0, R0, .o1D4
    SW          R0, 7C (S0)
    .o1D4
    LW          RA, 14 (SP)
    LW          S0, 10 (SP)
    CLEAR       V0
    JR          RA
    ADDIU       SP, SP, 18
}

%

#new:Function $Function_GetTattle
{
LIO       V0, $String_Tattle
JR        RA
RESERVED
}

#string $String_Tattle
{
[Style Tattle][EnableCDownNext]
I think this is some kind of factory.[BR]
None of these machines look[BR]
familiar to me, though.[BR]
[Wait][Next]
What do you think they made here?
[Wait][End]
}
