#define .Npc:Goomba1 00000000
#define .Npc:Goomba2 00000001
#define .Npc:Goomba3 00000002
#define .Npc:Goomba4 00000003

#new:Header $Header
{
	[MainScript] $Script_Main
	[Background] 00000000
	[EntryList] $EntryList
	[EntryCount] 1
    [MapTattle]  $Function_GetTattle
}

#new:EntryList $EntryList
{
	~Vec4f:Entry0
}

#new:Function_Init $Function_Init
{
	PUSH    RA
	LIA     A0, 800B0CF0
	LIA     A1, "tst_tex"
	JAL     800654F0 % sprintf
	RESERVED
	CLEAR  V0
	JPOP   RA
}

#new:Script_Main $Script_Main
{
	Set   *GB_WorldLocation  .Location:GustyGulch
	Call  SetCamPerspective  ( .Cam:Default 00000003 00000019 00000010 00001000 )
	Call  SetCamBGColor      ( .Cam:Default 00000000 00000000 00000000 )
	Call  SetCamEnabled      ( .Cam:Default .True )
	Call  SetCamLeadPlayer   ( .Cam:Default .False )
	Call  MakeNpcs ( .False $NpcGroupList_tyd03 )
    Exec  $Script_MakeEntities
	Exec  $Script_SetupMusic
	Exec  $Script_EnterMap
	Return
	End
}

%=== NPCs stuff ===

#new:NpcGroupList $NpcGroupList_tyd03
{
	00000004 $NpcGroup_Goombas 3C000000
	00000000 00000000 00000000
}

#new:NpcGroup $NpcGroup_Goombas
{
	.Npc:Goomba1 $NpcSettings_Goomba ~Vec3f:NPC_Goomba1
	00850D0D $Script_Goomba_Init_Main 00000000 00000000 0000010E
	~NoDrops
	~Movement:NPC_Goomba1
	~AnimationTable:NPC_Goomba1
	00000000 00000000 00000000 $Tattle_Goomba
	%
	.Npc:Goomba2 $NpcSettings_Goomba ~Vec3f:NPC_Goomba2
	00850D0D $Script_Goomba_Init 00000000 00000000 0000010E
	~NoDrops
	~Movement:NPC_Goomba2
	~AnimationTable:NPC_Goomba2
	00000000 00000000 00000000 $Tattle_Goomba
	%
	.Npc:Goomba3 $NpcSettings_Goomba ~Vec3f:NPC_Goomba3
	00850D0D $Script_Goomba_Init 00000000 00000000 0000010E
	~NoDrops
	~Movement:NPC_Goomba3
	~AnimationTable:NPC_Goomba3
	00000000 00000000 00000000 $Tattle_Goomba
	%
	.Npc:Goomba4 $NpcSettings_Goomba ~Vec3f:NPC_Goomba4
	00850D0D $Script_Goomba_Init 00000000 00000000 0000010E
	~NoDrops
	~Movement:NPC_Goomba4
	~AnimationTable:NPC_Goomba4
	00000000 00000000 00000000 $Tattle_Goomba
}

#new:NpcSettings $NpcSettings_Goomba
{
	00000000 001E0018 00000000 00000000 00000000 00000000 00000000 00000000
	00000000 00000000 00630000
}

#new:Script $Script_Goomba_Init_Main
{
	Call	BindNpcInteract ( .Npc:Self $Script_Goomba_Interact )
	Call	BindNpcIdle ( .Npc:Self $Script_Goomba_Idle )
	Call    BindNpcDefeat	( .Npc:Self $Script_Goomba_TrackBattle )
	Return
	End
}

#new:Script $Script_Goomba_Init
{
	Return
	End
}

#new:Script $Script_Goomba_Interact
{
	Exec	$Script_Goomba_Interact_Main
	Wait	30`
	Return
	End
}

#new:Script $Script_Goomba_Interact_Main
{
	Call  	DisablePlayerInput    ( .True )
	Call	SpeakToPlayer ( .Npc:Self 00260001 00260001 00000000 $String_Goomba_Start )
	Call  	ShowChoice    ( 001E000D ) % Yes No
	If *Var0 == 0 % Yes
		Call	ContinueSpeech ( .Npc:Self 00260001 00260001 00000000 $String_Goomba_Yes )
		Call    SetSelfVar ( 00000000 .True )
	Else
		Call	ContinueSpeech ( .Npc:Self 00260001 00260001 00000000 $String_Goomba_No )
		Call  	DisablePlayerInput    ( .False )
	EndIf
	Return
	End
}

#new:Script $Script_Goomba_Idle
{
	Loop
		Call    GetSelfVar ( 00000000 *Var0 )
		If *Var0 == .True
			Call    SetSelfVar ( 00000000 .False )
			Call	StartBossBattle ( .Song:NormalBattle )
			Thread
				Wait	1
				Call    DisablePlayerInput ( .False )
			EndThread
		EndIf
		Wait    1
	EndLoop
	Return
	End
}

#new:Script $Script_Goomba_TrackBattle
{
	Call  	DisablePlayerInput    ( .True )
	Call    GetBattleOutcome 	( *Var0 )
	Switch  *Var0 
		Case  ==  .Outcome:PlayerWon % 0
			Call    SetSelfEnemyFlagBits ( 00000004 .True ) % bit2 == Don't make the player and npc sprite start flashing after the fight ends
			Switch *MapVar[0]
				Case == 0
					Set *Var0 00003C01
				Case == 1
					Set *Var0 00003C02
				Case == 2
					Set *Var0 00003C03
				Case == 3
					Set *Var0 00003C04
				Case == 4
					Set *Var0 00003C05
				Case == 5
					Set *Var0 00003D00
				Case == 6
					Set *Var0 00003D01
				Case == 7
					Set *Var0 00003D02
				Case == 8
					Set *Var0 00003D03
				Case == 9
					Set *Var0 00003C00
			EndSwitch
			Call    $SetNpcGroupBattleID ( 00000000 *Var0 )
			Add		*MapVar[0] 1
			Switch *MapVar[0]
				Case == 9 % last battle
					Call	SpeakToPlayer ( .Npc:Self 00260001 00260001 00000000 $String_Goomba_FinalBattle )
				Case == 10` % all battles completed
					Set 	*MapVar[0] .False
					Call    $SetNpcGroupBattleID ( 00000000 00003C00 )
					Call	SpeakToPlayer ( .Npc:Self 00260001 00260001 00000000 $String_Goomba_Beated )
					If *GF_TYD03_Reward == .False
						Call	SpeakToPlayer ( .Npc:Self 00260001 00260001 00000000 $String_Goomba_Reward )
						Call    ShowGotItem ( .Item:PowerPlusA .True 00000000 )
						Call    AddBadge ( .Item:PowerPlusA 00000000 )
						Set 	*GF_TYD03_Reward .True
					EndIf
					Call  	DisablePlayerInput    ( .False )
					Return
				Default
					Call	SpeakToPlayer ( .Npc:Self 00260001 00260001 00000000 $String_Goomba_NextBattle )
			EndSwitch
			Call    SetSelfVar ( 00000000 .True ) % start next battle
	EndSwitch
	Return
	End
}

#string $String_Goomba_Start
{
[Style Right]
Hey! You're a new challenger,[BR]
right? I haven't seen you around[BR]
before.[BR]
[Wait][Next]
How do you handle yourself in a[BR]
fight? If you think you're tough,[BR]
how about taking on me and my[BR]
buddies?[BR]
[Wait][Next]
The rules are easy: take down[BR]
your opponents while fulfilling[BR]
a special condition! If you do it,[BR]
you go to the next round.[BR]
[Wait][Next]
Sound easy? How about you give[BR]
it your best shot?
[Yield][End]
}

#string $String_Goomba_Beated
{
[Style Right]
Phew, you really are tough.[BR]
That was a great fight![BR]
[Wait][Next]
If you ever want a rematch,[BR]
just say the word![BR]
We'll be ready for you!
[Wait][End]
}

#string $String_Goomba_Reward
{
[Style Right]
Here! To commemorate your[BR]
big win, we've got a prize ready.[BR]
[Wait][Next]
To the victor go the spoils.[BR]
Go on, take it![BR]
[Wait][End]
}

#string $String_Goomba_Yes
{
[Next]
You've got no idea what you're[BR]
in for. This is gonna be fun!
[Wait][End]
}

#string $String_Goomba_No
{
[Next]
Alright, no shame in knowing your[BR]
limits. If you ever feel bold,[BR]
you know where to find us!
[Wait][End]
}

#string $String_Goomba_NextBattle
{
[Style Right]
Hey, not bad! We're not through[BR]
with you yet, though. Time for the[BR]
next round!
[Wait][End]
}

#string $String_Goomba_FinalBattle
{
[Style Right]
Well, this is it. You made it all[BR]
the way to the final round.[BR]
[Wait][Next]
Good luck, guy! You're gonna[BR]
need it.
[Wait][End]
}

#string $Tattle_Goomba
{
[Style Tattle]
These Goombas seem like competitors[BR]
in this fighting ring. They look[BR]
pretty fierce to me...[BR]
[Wait][Next]
If you think you're ready, you[BR]
should try taking them on![BR]
[Wait][End]
}

%=====

#new:Function $Function_Pipe_SetAnimFlag
{
	LAW       V0, 800F7B30
	LW        V1, 4 (V0)
	LUI       A0, 10
	OR        V1, V1, A0
	SW        V1, 4 (V0)
	JR        RA
	ADDIU     V0, R0, 2
}

#new:Function $Function_Pipe_GetCurrentFloor
{
	LAH       V0, 8015A552
	SW        V0, 84 (A0)
	JR        RA
	ADDIU     V0, R0, 2
}

#new:Function $Function_Pipe_CheckDownInput
{
	LAH       V1, 8015A552
	ADDIU     SP, SP, FFE8
	SW        S0, 10 (SP)
	COPY      S0, A0
	SW        RA, 14 (SP)
	LW        V0, B0 (S0)
	BEQ       V1, V0, .o2C
	ADDIU     V0, R0, 2
	BEQ       R0, R0, .oAC
	SW        R0, 84 (S0)
	.o2C
	LAW       V1, 8007419C
	LB        V0, 40 (V1)
	LB        A3, 44 (V1)
	BLTZL     V0, .o44
	SUBU      V0, R0, V0
	.o44
	BNE       V0, R0, .o54
	NOP
	BEQL      A3, R0, .oAC
	CLEAR     V0
	.o54
	MTC1      V0, F4
	NOP
	CVT.S.W   F4, F4
	MFC1      A2, F4
	MTC1      A3, F4
	NOP
	CVT.S.W   F4, F4
	MTC1      R0, F12
	MFC1      A3, F4
	JAL       ~Func:atan2
	MOV.S     F14, F12
	LIF       F2, 60.0
	NOP
	C.LT.S    F0, F2
	NOP
	BC1F      .oA8
	ADDIU     V0, R0, 1
	SW        V0, 84 (S0)
	BEQ       R0, R0, .oAC
	ADDIU     V0, R0, 2
	.oA8
	CLEAR     V0
	.oAC
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_Pipe_GetEntryCoords
{
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	COPY      S1, A0
	SW        RA, 1C (SP)
	SW        S2, 18 (SP)
	JAL       ~Func:get_current_map_header
	SW        S0, 10 (SP)
	COPY      A0, S1
	LIO       A1, *Var0
	JAL       ~Func:get_variable
	COPY      S2, V0
	COPY      A0, S1
	LUI       A1, FE36
	LW        V1, 14 (S2)
	SLL       S0, V0, 4
	ADDU      V1, S0, V1
	LWC1      F0, 0 (V1)
	TRUNC.W.S F2, F0
	MFC1      A2, F2
	JAL       ~Func:set_variable
	ORI       A1, A1, 3C81 % Var[1]
	COPY      A0, S1
	LW        V0, 14 (S2)
	LUI       A1, FE36
	ADDU      V0, S0, V0
	LWC1      F0, 4 (V0)
	TRUNC.W.S F2, F0
	MFC1      A2, F2
	JAL       ~Func:set_variable
	ORI       A1, A1, 3C82 % Var[2]
	COPY      A0, S1
	LW        V0, 14 (S2)
	LUI       A1, FE36
	ADDU      V0, S0, V0
	LWC1      F0, 8 (V0)
	TRUNC.W.S F2, F0
	MFC1      A2, F2
	JAL       ~Func:set_variable
	ORI       A1, A1, 3C83 % Var[3]
	COPY      A0, S1
	LW        V0, 14 (S2)
	LUI       A1, FE36
	ADDU      S0, S0, V0
	LWC1      F0, C (S0)
	TRUNC.W.S F2, F0
	MFC1      A2, F2
	JAL       ~Func:set_variable
	ORI       A1, A1, 3C84 % Var[4]
	LW        RA, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20
}

#new:Function $Function_Pipe_GetCameraYaw
{
	LAW       V1, 80077410
	LIF       F12, 180.0
	ADDIU     SP, SP, FFE8
	SW        RA, 14 (SP)
	SW        S0, 10 (SP)
	SLL       V0, V1, 2
	ADDU      V0, V0, V1
	SLL       V0, V0, 2
	SUBU      V0, V0, V1
	SLL       V1, V0, 3
	ADDU      V0, V0, V1
	SLL       V0, V0, 3
	LTF       F0, V0 (800B1DEC)
	ADD.S     F12, F0, F12
	JAL       ~Func:clamp_angle
	COPY      S0, A0
	TRUNC.W.S F2, F0
	SWC1      F2, 84 (S0)
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18
}

#new:Function $Function_Pipe_GetPointInFrontOfPlayer
{
	ADDIU     SP, SP, FFD8
	SW        S0, 18 (SP)
	COPY      S0, A0
	SW        RA, 1C (SP)
	SDC1      F20, 20 (SP)
	LW        V0, C (S0)
	JAL       ~Func:get_float_variable
	LW        A1, 0 (V0)
	ADDIU     A0, SP, 10
	LIA       V0, 8010EFC8
	MFC1      A2, F0
	LWC1      F0, 28 (V0) % player X
	LWC1      F2, 30 (V0) % player Z
	SWC1      F0, 10 (SP) % arg0 for add_vec2D_polar
	SWC1      F2, 14 (SP) % arg1 for add_vec2D_polar
	LW        A3, 80 (V0)
	LWC1      F20, 2C (V0)
	JAL       ~Func:add_vec2D_polar
	ADDIU     A1, SP, 14
	COPY      A0, S0
	LUI       A1, FE36
	LW        A2, 10 (SP)
	JAL       ~Func:set_float_variable
	ORI       A1, A1, 3C80 % Var[0]
	COPY      A0, S0
	LUI       A1, FE36
	MFC1      A2, F20
	JAL       ~Func:set_float_variable
	ORI       A1, A1, 3C81 % Var[1]
	COPY      A0, S0
	LUI       A1, FE36
	LW        A2, 14 (SP)
	JAL       ~Func:set_float_variable
	ORI       A1, A1, 3C82 % Var[2]
	LW        RA, 1C (SP)
	LW        S0, 18 (SP)
	LDC1      F20, 20 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28
}

#new:Script $Script_EnterVerticalPipe
{
	Call  DisablePlayerInput    ( .True )
	Call  DisablePlayerPhysics  ( .True )
	Call  DisablePartnerAI      ( 00000000 )
	Call  HidePlayerShadow      ( .True )
	Call  SetPlayerAnimation    ( .PlayerAnim:StandStill )
	Call  GetCurrentPartnerID   ( *Var0 )
	If  *Var0  !=  .Partner:None % 0
		Call  EnableNpcShadow   ( .Npc:Partner .False )
		Call  SetNpcPos ( .Npc:Partner 00000000 -1000` 00000000 )
	EndIf
	Call  GetEntryID    ( *Var0 )
	Call  $Function_Pipe_GetEntryCoords ( )
	Sub   *Var[2]  40`
	Call  SetPlayerPos  ( *Var[1] *Var[2] *Var[3] )
	Call  InterpPlayerYaw   ( *Var[4] 00000000 )
	Call  PlaySound     ( 00000163 )
	Call  802D286C      ( 00000100 )
	Call  802D2520      ( 00010000 00000005 00000002 00000001 00000001 00000000 )
	Call  GetPlayerPos  ( *Var0 *Var[1] *Var[2] )
	Loop  40`
		Add   *Var[1]  00000001
		Call  SetPlayerPos  ( *Var0 *Var[1] *Var[2] )
		Wait  1`
	EndLoop
	Wait  3`
	Call  GetCurrentPartnerID   ( *Var0 )
	If  *Var0  !=  .Partner:None % 0
		Thread
			Call  DisablePartnerAI  ( 00000000 )
			Call  GetPlayerPos      ( *Var0 *Var[1] *Var[2] )
			Sub   *Var[2]  00000003
			Call  SetNpcPos ( .Npc:Partner *Var0 *Var[1] *Var[2] )
			Call  SetNpcFlagBits    ( .Npc:Partner 00000002 .False )
			Call  EnablePartnerAI ( )
			Call  EnableNpcShadow   ( .Npc:Partner .True )
		EndThread
	EndIf
	Wait  2`
	Call  802D2520  ( 00010000 00000000 00000000 00000000 00000000 00000000 )
	Wait  1`
	Call  SetPlayerAnimation    ( 00010002 )
	Call  DisablePlayerPhysics  ( .False )
	Call  DisablePlayerInput    ( .False )
	Call  HidePlayerShadow      ( .False )
	Label  0
	Call  $Function_Pipe_GetCurrentFloor ( )
	Wait  1`
	If  *Var0  !=  FFFFFFFF % FFFFFFFF
		Goto  0
	EndIf
	Exec  *Var[A]
	Return
	End
}

#new:Script $Script_EnterHorizontalPipe
{
	Call  DisablePlayerInput    ( .True )
	Call  DisablePlayerPhysics  ( .True )
	Call  HidePlayerShadow      ( .True )
	Call  ModifyColliderFlags   ( 00000000 *Var[B] 7FFFFE00 )
	Call  GetEntryID    ( *Var0 )
	Call  $Function_Pipe_GetEntryCoords ( )
	Set   *Var[5]  *Var[1]
	Set   *Var[6]  *Var[2]
	Set   *Var[7]  *Var[3]
	Add   *Var[2]  2`
	Call  SetPlayerPos  ( *Var[1] *Var[2] *Var[3] )
	Call  InterpPlayerYaw       ( *Var[4] 00000000 )
	If  *Var[4]  ==  90`
		Add   *Var[5]  40`
	Else
		Sub   *Var[5]  40`
	EndIf
	Call  UseSettingsFrom   ( .Cam:Default *Var[5] *Var[6] *Var[7] )
	Call  SetPanTarget      ( .Cam:Default *Var[5] *Var[6] *Var[7] )
	Call  SetCamSpeed       ( .Cam:Default *Fixed[90.0] )
	Call  PanToTarget       ( .Cam:Default 00000000 00000001 )
	Call  GetCurrentPartnerID   ( *Var0 )
	If  *Var0  !=  .Partner:None % 0
		Call  DisablePartnerAI  ( 00000000 )
		Call  EnableNpcShadow   ( .Npc:Partner .False )
		Call  SetNpcPos ( .Npc:Partner 00000000 -1000` 00000000 )
		Call  InterpNpcYaw      ( .Npc:Partner *Var0 00000000 )
	EndIf
	Wait  1`
	Call  PlaySound ( 00000163 )
	Thread
		Wait  25`
		Call  HidePlayerShadow  ( .False )
	EndThread
	Call  802D286C  ( 00000900 )
	Call  802D2520  ( 00010002 00000005 00000003 00000001 00000001 00000000 )
	Loop  40`
		Call  $Function_Pipe_GetPointInFrontOfPlayer ( *Fixed[1.0] )
		Call  SetPlayerPos  ( *Var0 *Var[1] *Var[2] )
		Wait  1`
	EndLoop
	Call  GetCurrentPartnerID   ( *Var0 )
	If  *Var0  !=  .Partner:None % 0
		Thread
			Call  GetPlayerPos      ( *Var0 *Var[1] *Var[2] )
			Sub   *Var[2]  00000003
			Call  SetNpcPos ( .Npc:Partner *Var0 *Var[1] *Var[2] )
			Call  EnableNpcShadow   ( .Npc:Partner .True )
			Call  EnablePartnerAI ( )
		EndThread
	EndIf
	Wait  5`
	Call  802D2520  ( 00010002 00000000 00000000 00000000 00000000 00000000 )
	Call  ModifyColliderFlags   ( 00000001 *Var[B] 7FFFFE00 )
	Call  DisablePlayerInput    ( .False )
	Call  DisablePlayerPhysics  ( .False )
	Call  PanToTarget   ( .Cam:Default 00000000 00000000 )
	Exec  *Var[A]
	Return
	End
}

/%
	ARGS:
	*Var[A]  entryID
	*Var[B]  colliderID
	*Var[C]  $Script_GotoMap
%/
#new:Script $Script_ExitVerticalPipe
{
	Call  $Function_Pipe_CheckDownInput ( )
	If  *Var0  ==  00000000
		Return
	EndIf
	Call  GetCurrentPartner ( *Var0 )
	If  *Var0  !=  00000000
		Call  GetCurrentPartnerID   ( *Var[1] )
		If  *Var[1]  !=  .Partner:Watt % 6
			Return
		Else
			Call  802D2B6C ( )
			Call  DisablePlayerInput    ( .True )
		EndIf
	Else
		Call  DisablePlayerInput    ( .True )
	EndIf
/%
	ExecWait  $Script_80241230
	Return
	End
}

#new:Script $Script_80241230
{
%/
	SetGroup  0000001B
	Call  $Function_Pipe_SetAnimFlag ( )
	Call  DisablePlayerPhysics  ( .True )
	Call  HidePlayerShadow  ( .True )
	Set   *Var0  *Var[A]
	Call  $Function_Pipe_GetEntryCoords ( )
	Call  PlayerMoveTo      ( *Var[1] *Var[3] 00000003 )
	Set   *Var0  *Var[A]
	Call  $Function_Pipe_GetEntryCoords ( )
	Call  SetPlayerPos      ( *Var[1] *Var[2] *Var[3] )
	Call  SetPlayerFlagBits ( 00200000 .True )
	Call  $Function_Pipe_GetCameraYaw ( )
	Call  InterpPlayerYaw   ( *Var0 00000000 )
	Wait  2`
	Call  SetPlayerFlagBits ( 00200000 .False )
	Call  PlaySound ( 00000163 )
	Call  GetPlayerPos      ( *Var0 *Var[1] *Var[2] )
	Thread
		Wait  4`
		Loop  40`
			Sub   *Var[1]  00000001
			Call  SetPlayerPos  ( *Var0 *Var[1] *Var[2] )
			Wait  1`
		EndLoop
	EndThread
	Call  802D286C  ( 00000800 )
	Call  802D2520  ( 00010002 00000005 00000002 00000001 00000001 00000000 )
	Wait  25`
	ExecWait  *Var[C]
	Return
	End
}

/%
	ARGS:
	*Var[A]  entryID
	*Var[B]  colliderID
	*Var[C]  $Script_GotoMap
%/
#new:Script $Script_ExitHorizontalPipe
{
	Call  802D249C  ( *Var0 )
	If  *Var0  ==  00000000
		Return
	EndIf
	Call  GetPlayerActionState  ( *Var0 )
	If  *Var0  ==  .ActionState:Spin % 1A
		Return
	EndIf
	Call  GetCurrentPartner ( *Var0 )
	If  *Var0  !=  .ActionState:Idle % 0
		Call  GetCurrentPartnerID   ( *Var[1] )
		If  *Var[1]  !=  .Partner:Watt % 6
			Return
		Else
			Call  802D2B6C ( )
			Call  DisablePlayerInput    ( .True )
		EndIf
	Else
		Call  DisablePlayerInput    ( .True )
	EndIf
	SetGroup  0000001B
	Call  $Function_Pipe_SetAnimFlag ( )
	Call  DisablePlayerPhysics  ( .True )
	Call  ModifyColliderFlags   ( 00000000 *Var[B] 7FFFFE00 )
	Set   *Var0  *Var[A]
	Call  $Function_Pipe_GetEntryCoords ( )
	Set   *Var[5]  *Var[1]
	Set   *Var[6]  *Var[2]
	Add   *Var[6]  2`
	Set   *Var[7]  *Var[3]
	Set   *Var[8]  *Var[4]
	Add   *Var[8]  180`
	If  *Var[4]  >=  360`
		Sub   *Var[4]  360`
	EndIf
	Call  InterpPlayerYaw       ( *Var[8] 00000001 )
	Wait  1`
	Call  PlaySound     ( 00000163 )
	Call  GetPlayerPos  ( *Var0 *Var[1] *Var[2] )
	Call  SetPlayerPos  ( *Var0 *Var[6] *Var[7] )
	Call  SetPlayerAnimation    ( .PlayerAnim:StandStill )
	Call  802D286C      ( 00000800 )
	Call  802D2520      ( 00010000 00000005 00000003 00000001 00000001 00000000 )
	Thread
		Wait  8`
		Call  HidePlayerShadow  ( .True )
	EndThread
	Thread
		Wait  3`
		Loop  40`
			Call  $Function_Pipe_GetPointInFrontOfPlayer ( *Fixed[1.0] )
			Call  SetPlayerPos  ( *Var0 *Var[1] *Var[2] )
			Wait  1`
		EndLoop
	EndThread
	Wait  25`
	ExecWait  *Var[C]
	Return
	End
}

#new:Script $Script_MakeEntities
{
	Call  MakeEntity    ( .Entity:SavePoint ~Vec4d:SaveBlock 80000000 )
	Call  MakeEntity    ( .Entity:HealingBlock ~Vec4d:HealBlock 80000000 )
	Call  MakeEntity  	( .Entity:SuperBlock ~Vec4d:Entity_Shine 80000000 )
    Set   *MapVar[1] *Var0
    Call  AssignBlockFlag   ( *GF_TYD03_Shine )
    Call  AssignScript 	    ( $Script_Entity_Shine1 )
	Return
	End
}

#new:Script $Script_Entity_Shine1
{
    Set *Var0 *MapVar[1] % entityID
    SetConst *Var1 *GF_TYD03_Shine % flag
    ExecWait $Script_ShineBlock
    Return
    End
}

#new:Script $Script_SetupMusic
{
	Call  SetMusicTrack ( 00000000 000000A9 00000000 00000008 )
	Call  ClearAmbientSounds ( 250` )
	Return
	End
}

#new:Script $Script_EnterMap
{
    Call  GetLoadType   ( *Var0 )
	If  *Var0  ==  1
		Exec  EnterSavePoint
		Exec $Script_CreateExitTriggers
		Return
	EndIf
	Call  GetEntryID    ( *Var0 )
	Switch  *Var0
		Case  ==  ~Entry:Entry0
			Set   *Var[A] $Script_CreateExitTriggers
			Exec  $Script_EnterVerticalPipe
		Default
			Exec  $Script_CreateExitTriggers
	EndSwitch
	Return
	End
}

#new:Script $Script_Exit0
{
	SetGroup 0000001B
	Set   *Var[A] ~Entry:Entry0
	Set   *Var[B] ~Collider:Exit0
	Set   *Var[C] $Script_GotoMap_Exit0
	ExecWait  $Script_ExitVerticalPipe
	Return
	End
}

#new:Script $Script_GotoMap_Exit0
{
	Call  GotoMap   ( "arn_24" 00000001 )
	Wait  100`
	Return
	End
}

#new:Script $Script_CreateExitTriggers
{
	Bind  $Script_Exit0 .Trigger:FloorTouch ~Collider:Exit0 00000001 00000000
	Return
	End
}

%

#new:Function $Function_GetTattle
{
LIO       V0, $String_Tattle
JR        RA
RESERVED
}

#string $String_Tattle
{
[Style Tattle][EnableCDownNext]
Looks like some kind of secret[BR]
fighting arena! I wonder if there's[BR]
big prizes for the winners...[BR]
[Wait][Next]
You can definitely take them, right?[BR]
Come on! Let's show them what we're[BR]
made of!
[Wait][End]
}
