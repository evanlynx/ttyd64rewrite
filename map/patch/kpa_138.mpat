#new:Header $Header
{
	[MainScript] $Script_Main
	[Background] 00000000
	[EntryList] $EntryList
	[EntryCount] 2
    [MapTattle]  $Function_GetTattle
}

#new:EntryList $EntryList
{
	~Vec4f:Entry0
    ~Vec4f:Entry1
}

#new:Script_Main $Script_Main
{
	Set   *GB_WorldLocation  .Location:BowsersCastle
	Call  SetCamPerspective  ( .Cam:Default 00000003 00000019 00000010 00001000 )
	Call  SetCamBGColor      ( .Cam:Default 00000000 00000000 00000000 )
	Call  SetCamEnabled      ( .Cam:Default .True )
	Call  SetCamLeadPlayer   ( .Cam:Default .False )
	Exec  $Script_SetupMusic
	Exec  $Script_SetupTexturePan
    Exec  $Script_EnterMap
    Set   *Var0 $Script_CreateExitTriggers
    Exec  EnterWalk
    Wait  10`
	Return
	End
}

#new:Script $Script_SetupMusic
{
	Call  SetMusicTrack ( 00000000 .Song:BowsersCastle 00000000 00000008 )
	Call  ClearAmbientSounds ( 250` )
	Return
	End
}

#new:Script $Script_EnterMap
{
    Call  ModifyColliderFlags   ( 00000003 ~Collider:SushiePad 00000004 )
    Call  ModifyColliderFlags   ( 00000000 ~Collider:SushiePad 00080000 )
    NewArray 9 *MapVar[A]
    If *GF_KPA138_PuzzleSolved == .False
        Bind  $Script_Block1 .Trigger:WallPressA ~Collider:block1 00000001 00000000
        Bind  $Script_Block2 .Trigger:WallPressA ~Collider:block2 00000001 00000000
        Bind  $Script_Block3 .Trigger:WallPressA ~Collider:block3 00000001 00000000
        Bind  $Script_Block4 .Trigger:WallPressA ~Collider:block4 00000001 00000000
        Bind  $Script_Block5 .Trigger:WallPressA ~Collider:block5 00000001 00000000
        Bind  $Script_Block6 .Trigger:WallPressA ~Collider:block6 00000001 00000000
        Bind  $Script_Block7 .Trigger:WallPressA ~Collider:block7 00000001 00000000
        Bind  $Script_Block8 .Trigger:WallPressA ~Collider:block8 00000001 00000000
        Bind  $Script_Block9 .Trigger:WallPressA ~Collider:block9 00000001 00000000
    Else
        Call  TranslateGroup ( ~Model:g1 0 -10` 0 )
        Call  TranslateGroup ( ~Model:g2 0 -10` 0 )
        Call  TranslateGroup ( ~Model:g3 0 -10` 0 )
        Call  TranslateGroup ( ~Model:g4 0 -10` 0 )
        Call  TranslateGroup ( ~Model:g5 0 -10` 0 )
        Call  TranslateGroup ( ~Model:g6 0 -10` 0 )
        Call  TranslateGroup ( ~Model:g7 0 -10` 0 )
        Call  TranslateGroup ( ~Model:g8 0 -10` 0 )
        Call  TranslateGroup ( ~Model:g9 0 -10` 0 )
        Call  PlayEffect  	 ( ~FX:Fire:Blue ~Vec3d:FX_1 *Fixed[1.0] 0 .False .False .False .False .False .False )
        Call  PlayEffect  	 ( ~FX:Fire:Blue ~Vec3d:FX_2 *Fixed[1.0] 0 .False .False .False .False .False .False )
        Call  PlayEffect  	 ( ~FX:Fire:Blue ~Vec3d:FX_3 *Fixed[1.0] 0 .False .False .False .False .False .False )
        Call  PlayEffect  	 ( ~FX:Fire:Blue ~Vec3d:FX_4 *Fixed[1.0] 0 .False .False .False .False .False .False )
        Call  PlayEffect  	 ( ~FX:Fire:Blue ~Vec3d:FX_5 *Fixed[1.0] 0 .False .False .False .False .False .False )
        Call  PlayEffect  	 ( ~FX:Fire:Blue ~Vec3d:FX_6 *Fixed[1.0] 0 .False .False .False .False .False .False )
        Call  PlayEffect  	 ( ~FX:Fire:Blue ~Vec3d:FX_7 *Fixed[1.0] 0 .False .False .False .False .False .False )
        Call  PlayEffect  	 ( ~FX:Fire:Blue ~Vec3d:FX_8 *Fixed[1.0] 0 .False .False .False .False .False .False )
        Call  PlayEffect  	 ( ~FX:Fire:Blue ~Vec3d:FX_9 *Fixed[1.0] 0 .False .False .False .False .False .False )
        Call  MakeItemEntity ( .Item:PowerPlusP ~Vec3d:ItemPos .ItemSpawnMode:Fixed_NeverVanish *GF_KPA138_Item )
    EndIf
	Return
	End
}

#new:Script $Script_Block1
{
    Set *Var0 1
    ExecWait $Script_PressBlock
    Return
    End
}

#new:Script $Script_Block2
{
    Set *Var0 2
    ExecWait $Script_PressBlock
    Return
    End
}

#new:Script $Script_Block3
{
    Set *Var0 3
    ExecWait $Script_PressBlock
    Return
    End
}

#new:Script $Script_Block4
{
    Set *Var0 4
    ExecWait $Script_PressBlock
    Return
    End
}

#new:Script $Script_Block5
{
    Set *Var0 5
    ExecWait $Script_PressBlock
    Return
    End
}

#new:Script $Script_Block6
{
    Set *Var0 6
    ExecWait $Script_PressBlock
    Return
    End
}

#new:Script $Script_Block7
{
    Set *Var0 7
    ExecWait $Script_PressBlock
    Return
    End
}

#new:Script $Script_Block8
{
    Set *Var0 8
    ExecWait $Script_PressBlock
    Return
    End
}

#new:Script $Script_Block9
{
    Set *Var0 9
    ExecWait $Script_PressBlock
    Return
    End
}

#new:Script $Script_PressBlock
{
    If *GF_KPA138_PuzzleSolved == .True
        Return
    EndIf
    Call    DisablePlayerInput ( .True )
    Set     *MapFlag[1] .False
    Set     *MapFlag[2] .False
    Set     *MapFlag[3] .False
    Set     *MapFlag[4] .False
    Set     *MapFlag[5] .False
    Set     *MapFlag[6] .False
    Set     *MapFlag[7] .False
    Set     *MapFlag[8] .False
    Set     *MapFlag[9] .False
    Switch *Var0
        Case == 1 % Upper left
            Call $Function_ToggleBool ( *MapVar[1] )
            Call $Function_ToggleBool ( *MapVar[2] )
            Call $Function_ToggleBool ( *MapVar[4] )
            Set *MapFlag[1] .True
            Set *MapFlag[2] .True
            Set *MapFlag[4] .True
        Case == 2 % Upper middle
            Call $Function_ToggleBool ( *MapVar[1] )
            Call $Function_ToggleBool ( *MapVar[2] )
            Call $Function_ToggleBool ( *MapVar[3] )
            Call $Function_ToggleBool ( *MapVar[5] )
            Set *MapFlag[1] .True
            Set *MapFlag[2] .True
            Set *MapFlag[3] .True
            Set *MapFlag[5] .True
        Case == 3 % Upper right
            Call $Function_ToggleBool ( *MapVar[2] )
            Call $Function_ToggleBool ( *MapVar[3] )
            Call $Function_ToggleBool ( *MapVar[6] )
            Set *MapFlag[2] .True
            Set *MapFlag[3] .True
            Set *MapFlag[6] .True
        Case == 4 % Middle left
            Call $Function_ToggleBool ( *MapVar[1] )
            Call $Function_ToggleBool ( *MapVar[4] )
            Call $Function_ToggleBool ( *MapVar[5] )
            Call $Function_ToggleBool ( *MapVar[7] )
            Set *MapFlag[1] .True
            Set *MapFlag[4] .True
            Set *MapFlag[5] .True
            Set *MapFlag[7] .True
        Case == 5 % Middle middle
            Call $Function_ToggleBool ( *MapVar[2] )
            Call $Function_ToggleBool ( *MapVar[4] )
            Call $Function_ToggleBool ( *MapVar[5] )
            Call $Function_ToggleBool ( *MapVar[6] )
            Call $Function_ToggleBool ( *MapVar[8] )
            Set *MapFlag[2] .True
            Set *MapFlag[4] .True
            Set *MapFlag[5] .True
            Set *MapFlag[6] .True
            Set *MapFlag[8] .True
        Case == 6 % Middle right
            Call $Function_ToggleBool ( *MapVar[3] )
            Call $Function_ToggleBool ( *MapVar[5] )
            Call $Function_ToggleBool ( *MapVar[6] )
            Call $Function_ToggleBool ( *MapVar[9] )
            Set *MapFlag[3] .True
            Set *MapFlag[5] .True
            Set *MapFlag[6] .True
            Set *MapFlag[9] .True
        Case == 7 % Down left
            Call $Function_ToggleBool ( *MapVar[4] )
            Call $Function_ToggleBool ( *MapVar[7] )
            Call $Function_ToggleBool ( *MapVar[8] )
            Set *MapFlag[4] .True
            Set *MapFlag[7] .True
            Set *MapFlag[8] .True
        Case == 8 % Down middle
            Call $Function_ToggleBool ( *MapVar[5] )
            Call $Function_ToggleBool ( *MapVar[7] )
            Call $Function_ToggleBool ( *MapVar[8] )
            Call $Function_ToggleBool ( *MapVar[9] )
            Set *MapFlag[5] .True
            Set *MapFlag[7] .True
            Set *MapFlag[8] .True
            Set *MapFlag[9] .True
        Case == 9 % Down right
            Call $Function_ToggleBool ( *MapVar[6] )
            Call $Function_ToggleBool ( *MapVar[8] )
            Call $Function_ToggleBool ( *MapVar[9] )
            Set *MapFlag[6] .True
            Set *MapFlag[8] .True
            Set *MapFlag[9] .True
    EndSwitch
    ExecWait $Script_MovePillars
    ExecWait $Script_CheckSolution
    Call    DisablePlayerInput ( .False )
    Return
    End
}

#new:Unknown $Data_ModelGroupsTable
{
    ~Model:g1 ~Model:g2 ~Model:g3
    ~Model:g4 ~Model:g5 ~Model:g6
    ~Model:g7 ~Model:g8 ~Model:g9
}

#new:Unknown $Data_FXPosTable
{
    ~Vec3d:FX_1
    ~Vec3d:FX_2
    ~Vec3d:FX_3
    ~Vec3d:FX_4
    ~Vec3d:FX_5
    ~Vec3d:FX_6
    ~Vec3d:FX_7
    ~Vec3d:FX_8
    ~Vec3d:FX_9
}

#new:Script $Script_MovePillars
{
    UseIntBuffer $Data_ModelGroupsTable
    SetConst *Var2 *MapFlag[1]
    SetConst *Var3 *MapVar[1]
    Set *Var4 0
    Call PlaySound ( 0152 ) % switch
    Loop 9
        % Get FX pos
        Set *Var1 *Var4
        Set *Var5 C
        Mul *Var1 *Var5
        Set *Var0 $Data_FXPosTable
        Add *Var0 *Var1
        Call $ReadAddress ( *Var0 2 *Var8 0 .False ) % X
        Call $ReadAddress ( *Var0 2 *Var9 4 .False ) % Y
        Call $ReadAddress ( *Var0 2 *VarA 8 .False ) % Z
        % Get FX slot in FXs table
        Set *Var1 *Var4
        Set *Var5 4
        Mul *Var1 *Var5
        Set *Var7 *MapVar[A]
        Add *Var7 *Var1
        Call $Function_GetVarFromVar ( *Var2 *Var5 )
        If *Var5 == .True
            GetIntN *Var6 *Var4
            Call $Function_GetVarFromVar ( *Var3 *Var5 )
            If *Var5 == .False % Turn flame off
                Thread
                    Call    MakeLerp ( -10` 0 15` .Easing:Linear )
                    Loop
                        Call    UpdateLerp
                        Call    TranslateGroup ( *Var6 0 *Var0 0 )
                        Wait    1
                        If *Var1 == .False
                            BreakLoop
                        EndIf
                    EndLoop
                    Set     *Var1 *Var9
                    Add     *Var1 20` % y
                    Call    PlayEffect  	( ~FX:SmokeImpact:Red *Var8 *Var1 *VarA 0 10` 0 15` .False .False .False .False )
                    Wait    5
                    Call    $ReadAddress  ( *Var7 2 *Var0 .False .False )
                    Call    RemoveEffect ( *Var0 )
                EndThread
            Else % Turn flame on
                Thread
                    Call    MakeLerp ( 0 -10` 15` .Easing:Linear )
                    Loop
                        Call    UpdateLerp
                        Call    TranslateGroup ( *Var6 0 *Var0 0 )
                        Wait    1
                        If *Var1 == .False
                            BreakLoop
                        EndIf
                    EndLoop
                    Set     *Var1 *Var9
                    Add     *Var1 20` % y
                    Call    PlayEffect  	( ~FX:SmokeImpact:Red *Var8 *Var1 *VarA 0 10` 0 15` .False .False .False .False )
                    Wait    5
                    Call    PlayEffect  	( ~FX:Fire:Blue *Var8 *Var9 *VarA *Fixed[1.0] 0 .False .False .False .False .False .False )
                    Call    $ReadAddress  ( $Data_LastFX 2 *Var0 .False .False )
                    Call    $WriteAddress ( *Var7 2 *Var0 .False .False ) % save FX pointer
                EndThread
            EndIf
        EndIf
        Add     *Var2 1 % Pillar bool (MapFlag)
        Add     *Var3 1 % Pillar state (MapVar)
        Add     *Var4 1 % Loop counter
        Wait    1
    EndLoop
    Wait    5
    Call    PlaySound ( 00E2 ) % burned
    Wait    10`
    Return
    End
}

% Call $Function_GetVarFromVar ( var *out )
#new:Function $Function_GetVarFromVar
{
    PUSH    RA, A0, A1, A2, A3, V0, V1, S0
    COPY    S0, A0
    LW      A1, C (A0)
    JAL     ~Func:get_variable
    LW      A1, 0 (A1)
    COPY    A0, S0
    JAL     ~Func:get_variable
    COPY    A1, V0
    COPY    A0, S0
    LW      A1, C (A0)
    LW      A1, 4 (A1)
    JAL     ~Func:set_variable
    COPY    A2, V0
    POP     RA, A0, A1, A2, A3, V0, V1, S0
    JR      RA
    ORI     V0, R0, 2
}

#new:Script $Script_CheckSolution
{
    Set *Var0 *MapVar[1]
    Add *Var0 *MapVar[2]
    Add *Var0 *MapVar[3]
    Add *Var0 *MapVar[4]
    Add *Var0 *MapVar[5]
    Add *Var0 *MapVar[6]
    Add *Var0 *MapVar[7]
    Add *Var0 *MapVar[8]
    Add *Var0 *MapVar[9]
    If *Var0 == 9 % All pillars are turned on
        Set   *GF_KPA138_PuzzleSolved .True
        Call  PlaySound ( 000B ) % puzzle solved
        Set   *Var0 ~PosXd:ItemPos
        Set   *Var1 ~PosYd:ItemPos
        Add   *Var1 220` % y
        Set   *Var2 ~PosZd:ItemPos
        Call  MakeItemEntity ( .Item:PowerPlusP *Var0 *Var1 *Var2 .ItemSpawnMode:Fall_NeverVanish *GF_KPA138_Item )
        Call  DisablePlayerInput ( .True )
        Wait  15`
        Call  DisablePlayerInput ( .False )
    EndIf
    Return
    End
}

% Call $Function_ToggleBool ( var )
#new:Function $Function_ToggleBool
{
    PUSH    RA, A0, A1, A2, A3, V0, V1, S0
    COPY    S0, A0
    LW      A1, C (A0)
    JAL     ~Func:get_variable
    LW      A1, 0 (A1)
    BEQL    V0, R0, .SetVar
    ORI     V0, R0, 1
    CLEAR   V0
    .SetVar
    COPY    A0, S0
    LW      A1, C (A0)
    LW      A1, 0 (A1)
    JAL     ~Func:set_variable
    COPY    A2, V0
    POP     RA, A0, A1, A2, A3, V0, V1, S0
    JR      RA
    ORI     V0, R0, 2
}

#new:Script $Script_CreateExitTriggers
{
    Bind  $Script_Exit0 .Trigger:FloorAbove ~Collider:Exit0 00000001 00000000
	Return
	End
}

#new:Script $Script_Exit0
{
    Call     $WriteAddress ( 800740A1 0 .True .False .False ) % force Mario to enter the next map using his partner
    Call     GotoMap	( "kpa_133" 4 )
	Wait     100`
	Return
	End
}

% Panners code

#new:Script $Script_SetupTexturePan
{
	Call     802C9000 	( ~Model:water 0 )
	Call     802C9000 	( ~Model:water2 1 )
	Thread
		Set  *Var[0] 0
		Set  *Var[1] C8
		Set  *Var[2] FFFFFF38
		Set  *Var[3] 14
		Set  *Var[4] FFFFFFEC
		Set  *Var[5] 1
		Set  *Var[6] 1
		Set  *Var[7] 1
		Set  *Var[8] 1
		Set  *Var[9] 0
		Set  *Var[A] 0
		Set  *Var[B] 0
		Set  *Var[C] 0
		Exec $Script_TexturePan_Update
	EndThread
	Thread
		Set  *Var[0] 1
		Set  *Var[1] FFFFFF9C
		Set  *Var[2] 64
		Set  *Var[3] 46
		Set  *Var[4] FFFFFFBA
		Set  *Var[5] 1
		Set  *Var[6] 1
		Set  *Var[7] 1
		Set  *Var[8] 1
		Set  *Var[9] 0
		Set  *Var[A] 0
		Set  *Var[B] 0
		Set  *Var[C] 0
		Exec $Script_TexturePan_Update
	EndThread
	Return
	End
}

#new:Script $Script_TexturePan_Update
{
    SetGroup  00000000
    If  *Var[5]  ==  00000001
        If  *Var[6]  ==  00000001
            If  *Var[7]  ==  00000001
                If  *Var[8]  ==  00000001
                    Call  $Function_TexturePan_Simple ( )
                    Return
                EndIf
            EndIf
        EndIf
    EndIf
    Call  $Function_TexturePan_Complex ( )
    Return
    End
}

#new:Function $Function_TexturePan_Simple
{
    ADDIU       SP, SP, FFE8
    SW          S0, 10 (SP)
    COPY        S0, A0
    SW          RA, 14 (SP)
    LW          V1, A8 (S0)
    LW          V0, 88 (S0)
    ADDU        V1, V1, V0
    BGEZ        V1, .o30
    SW          V1, A8 (S0)
    LUI         V0, 2
    BEQ         R0, R0, .o40
    ADDU        V0, V1, V0
    .o30
    LUI         A0, 2
    SLT         V0, A0, V1
    BEQ         V0, R0, .o44
    SUBU        V0, V1, A0
    .o40
    SW          V0, A8 (S0)
    .o44
    LW          V1, AC (S0)
    LW          V0, 8C (S0)
    ADDU        V1, V1, V0
    BGEZ        V1, .o64
    SW          V1, AC (S0)
    LUI         V0, 2
    BEQ         R0, R0, .o74
    ADDU        V0, V1, V0
    .o64
    LUI         A0, 2
    SLT         V0, A0, V1
    BEQ         V0, R0, .o78
    SUBU        V0, V1, A0
    .o74
    SW          V0, AC (S0)
    .o78
    LW          V1, B0 (S0)
    LW          V0, 90 (S0)
    ADDU        V1, V1, V0
    BGEZ        V1, .o98
    SW          V1, B0 (S0)
    LUI         V0, 2
    BEQ         R0, R0, .oA8
    ADDU        V0, V1, V0
    .o98
    LUI         A0, 2
    SLT         V0, A0, V1
    BEQ         V0, R0, .oAC
    SUBU        V0, V1, A0
    .oA8
    SW          V0, B0 (S0)
    .oAC
    LW          V1, B4 (S0)
    LW          V0, 94 (S0)
    ADDU        V1, V1, V0
    BGEZ        V1, .oCC
    SW          V1, B4 (S0)
    LUI         V0, 2
    BEQ         R0, R0, .oDC
    ADDU        V0, V1, V0
    .oCC
    LUI         A0, 2
    SLT         V0, A0, V1
    BEQ         V0, R0, .oE0
    SUBU        V0, V1, A0
    .oDC
    SW          V0, B4 (S0)
    .oE0
    LW          A0, 84 (S0)
    JAL         8011BC1C
    LW          A1, A8 (S0)
    LW          A0, 84 (S0)
    JAL         8011BC34
    LW          A1, AC (S0)
    LW          A0, 84 (S0)
    JAL         8011BC4C
    LW          A1, B0 (S0)
    LW          A0, 84 (S0)
    JAL         8011BC64
    LW          A1, B4 (S0)
    LW          RA, 14 (SP)
    LW          S0, 10 (SP)
    CLEAR       V0
    JR          RA
    ADDIU       SP, SP, 18
}

#new:Function $Function_TexturePan_Complex
{
    ADDIU       SP, SP, FFE8
    SW          S0, 10 (SP)
    COPY        S0, A0
    BEQ         A1, R0, .o24
    SW          RA, 14 (SP)
    SW          R0, 70 (S0)
    SW          R0, 74 (S0)
    SW          R0, 78 (S0)
    SW          R0, 7C (S0)
    .o24
    LW          V0, 70 (S0)
    BNE         V0, R0, .o64
    NOP
    LW          V1, A8 (S0)
    LW          V0, 88 (S0)
    ADDU        V1, V1, V0
    BGEZ        V1, .o50
    SW          V1, A8 (S0)
    LUI         V0, 2
    BEQ         R0, R0, .o60
    ADDU        V0, V1, V0
    .o50
    LUI         A0, 2
    SLT         V0, A0, V1
    BEQ         V0, R0, .o64
    SUBU        V0, V1, A0
    .o60
    SW          V0, A8 (S0)
    .o64
    LW          V0, 74 (S0)
    BNE         V0, R0, .oA4
    NOP
    LW          V1, AC (S0)
    LW          V0, 8C (S0)
    ADDU        V1, V1, V0
    BGEZ        V1, .o90
    SW          V1, AC (S0)
    LUI         V0, 2
    BEQ         R0, R0, .oA0
    ADDU        V0, V1, V0
    .o90
    LUI         A0, 2
    SLT         V0, A0, V1
    BEQ         V0, R0, .oA4
    SUBU        V0, V1, A0
    .oA0
    SW          V0, AC (S0)
    .oA4
    LW          V0, 78 (S0)
    BNE         V0, R0, .oE4
    NOP
    LW          V1, B0 (S0)
    LW          V0, 90 (S0)
    ADDU        V1, V1, V0
    BGEZ        V1, .oD0
    SW          V1, B0 (S0)
    LUI         V0, 2
    BEQ         R0, R0, .oE0
    ADDU        V0, V1, V0
    .oD0
    LUI         A0, 2
    SLT         V0, A0, V1
    BEQ         V0, R0, .oE4
    SUBU        V0, V1, A0
    .oE0
    SW          V0, B0 (S0)
    .oE4
    LW          V0, 7C (S0)
    BNE         V0, R0, .o124
    NOP
    LW          V1, B4 (S0)
    LW          V0, 94 (S0)
    ADDU        V1, V1, V0
    BGEZ        V1, .o110
    SW          V1, B4 (S0)
    LUI         V0, 2
    BEQ         R0, R0, .o120
    ADDU        V0, V1, V0
    .o110
    LUI         A0, 2
    SLT         V0, A0, V1
    BEQ         V0, R0, .o124
    SUBU        V0, V1, A0
    .o120
    SW          V0, B4 (S0)
    .o124
    LW          A0, 84 (S0)
    JAL         8011BC1C
    LW          A1, A8 (S0)
    LW          A0, 84 (S0)
    JAL         8011BC34
    LW          A1, AC (S0)
    LW          A0, 84 (S0)
    JAL         8011BC4C
    LW          A1, B0 (S0)
    LW          A0, 84 (S0)
    JAL         8011BC64
    LW          A1, B4 (S0)
    LW          V0, 70 (S0)
    LW          V1, 78 (S0)
    LW          A0, 98 (S0)
    ADDIU       V0, V0, 1
    SW          V0, 70 (S0)
    LW          V0, 74 (S0)
    ADDIU       V1, V1, 1
    SW          V1, 78 (S0)
    LW          V1, 70 (S0)
    ADDIU       V0, V0, 1
    SW          V0, 74 (S0)
    LW          V0, 7C (S0)
    SLT         V1, V1, A0
    ADDIU       V0, V0, 1
    BNE         V1, R0, .o198
    SW          V0, 7C (S0)
    SW          R0, 70 (S0)
    .o198
    LW          V0, 74 (S0)
    LW          V1, 9C (S0)
    SLT         V0, V0, V1
    BEQL        V0, R0, .o1AC
    SW          R0, 74 (S0)
    .o1AC
    LW          V0, 78 (S0)
    LW          V1, A0 (S0)
    SLT         V0, V0, V1
    BEQL        V0, R0, .o1C0
    SW          R0, 78 (S0)
    .o1C0
    LW          V0, 7C (S0)
    LW          V1, A4 (S0)
    SLT         V0, V0, V1
    BEQL        V0, R0, .o1D4
    SW          R0, 7C (S0)
    .o1D4
    LW          RA, 14 (SP)
    LW          S0, 10 (SP)
    CLEAR       V0
    JR          RA
    ADDIU       SP, SP, 18
}

%===========

#new:Function $Function_GetTattle
{
LIO       V0, $String_Tattle
JR        RA
RESERVED
}

#string $String_Tattle {
[Style Tattle][EnableCDownNext]
Looks like these pillars are part of[BR]
some kind of puzzle! You probably[BR]
need them all in the right spot.
[Wait][End]      
}